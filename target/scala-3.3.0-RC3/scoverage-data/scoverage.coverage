# Coverage data, format version: 3.0
# Statement data:
# - id
# - source path
# - package name
# - class name
# - class type (Class, Object or Trait)
# - full class name
# - method name
# - start offset
# - end offset
# - line number
# - symbol name
# - tree name
# - is branch
# - invocations count
# - is ignored
# - description (can be multi-line)
# '' sign
# ------------------------------------------
0
src/main/scala/app/Life.scala
app
Life$
Object
app.Life$
<init>
1713
1751
41
getConfig
Apply
false
0
false
ConfigFactory.load().getConfig("life")

1
src/main/scala/app/Life.scala
app
Life$
Object
app.Life$
<init>
1713
1733
41
load
Apply
false
0
false
ConfigFactory.load()

2
src/main/scala/app/Life.scala
app
Life$
Object
app.Life$
<init>
1775
1828
42
from
Apply
false
0
false
Bounds.from(config.getConfig("defaults.boardBounds"))

3
src/main/scala/app/Life.scala
app
Life$
Object
app.Life$
<init>
1787
1827
42
getConfig
Apply
false
0
false
config.getConfig("defaults.boardBounds")

4
src/main/scala/app/Life.scala
app
Life$
Object
app.Life$
<init>
1852
1908
43
from
Apply
false
0
false
Bounds.from(config.getConfig("defaults.viewportBounds"))

5
src/main/scala/app/Life.scala
app
Life$
Object
app.Life$
<init>
1864
1907
43
getConfig
Apply
false
0
false
config.getConfig("defaults.viewportBounds")

6
src/main/scala/app/Life.scala
app
Life$
Object
app.Life$
iterateGenerations
1988
2051
46
withViewport
Apply
false
0
false
World.withCells(cells).withBounds(board).withViewport(viewport)

7
src/main/scala/app/Life.scala
app
Life$
Object
app.Life$
iterateGenerations
1988
2028
46
withBounds
Apply
false
0
false
World.withCells(cells).withBounds(board)

8
src/main/scala/app/Life.scala
app
Life$
Object
app.Life$
iterateGenerations
1988
2010
46
withCells
Apply
false
0
false
World.withCells(cells)

9
src/main/scala/app/Life.scala
app
Life$
Object
app.Life$
iterateGenerations
2056
2079
47
print
Apply
false
0
false
print(Ansi.clearScreen)

10
src/main/scala/app/Life.scala
app
Life$
Object
app.Life$
iterateGenerations
2084
2213
48
foreach
Apply
false
0
false
Generations(initialWorld).foreach { world =>\n      print(Ansi.home)\n      println(world.prettified)\n      Thread.sleep(200)\n    }

11
src/main/scala/app/Life.scala
app
Life$
Object
app.Life$
$anonfun
2135
2151
49
print
Apply
false
0
false
print(Ansi.home)

12
src/main/scala/app/Life.scala
app
Life$
Object
app.Life$
$anonfun
2158
2183
50
println
Apply
false
0
false
println(world.prettified)

13
src/main/scala/app/Life.scala
app
Life$
Object
app.Life$
$anonfun
2166
2182
50
prettified
Apply
false
0
false
world.prettified

14
src/main/scala/app/Life.scala
app
Life$
Object
app.Life$
$anonfun
2190
2207
51
sleep
Apply
false
0
false
Thread.sleep(200)

15
src/main/scala/app/Life.scala
app
Life$
Object
app.Life$
iterateGenerations
1912
1942
45
iterateGenerations
DefDef
false
0
false
private def iterateGenerations

16
src/main/scala/app/Life.scala
app
Life$
Object
app.Life$
runRandom
2263
2285
55
random
Apply
false
0
false
Patterns.random(board)

17
src/main/scala/app/Life.scala
app
Life$
Object
app.Life$
runRandom
2290
2315
56
iterateGenerations
Apply
false
0
false
iterateGenerations(cells)

18
src/main/scala/app/Life.scala
app
Life$
Object
app.Life$
runRandom
2217
2238
54
runRandom
DefDef
false
0
false
private def runRandom

19
src/main/scala/app/Life.scala
app
Life$
Object
app.Life$
runWithFile
2373
2401
59
fromFilename
Apply
false
0
false
Cells.fromFilename(filename)

20
src/main/scala/app/Life.scala
app
Life$
Object
app.Life$
runWithFile
2414
2431
60
<none>
Block
false
0
false
case Right(cells)

21
src/main/scala/app/Life.scala
app
Life$
Object
app.Life$
runWithFile
2435
2460
60
iterateGenerations
Apply
false
0
false
iterateGenerations(cells)

22
src/main/scala/app/Life.scala
app
Life$
Object
app.Life$
runWithFile
2467
2483
61
<none>
Block
false
0
false
case Left(error)

23
src/main/scala/app/Life.scala
app
Life$
Object
app.Life$
runWithFile
2488
2502
61
println
Apply
false
0
false
println(error)

24
src/main/scala/app/Life.scala
app
Life$
Object
app.Life$
runWithFile
2319
2342
58
runWithFile
DefDef
false
0
false
private def runWithFile

25
src/main/scala/app/Life.scala
app
Life$
Object
app.Life$
main
2551
2555
64
refArrayOps
Apply
false
0
false
args

26
src/main/scala/app/Life.scala
app
Life$
Object
app.Life$
main
2551
2563
64
isEmpty
Select
false
0
false
args.isEmpty

27
src/main/scala/app/Life.scala
app
Life$
Object
app.Life$
main
2573
2582
65
runRandom
Ident
false
0
false
runRandom

28
src/main/scala/app/Life.scala
app
Life$
Object
app.Life$
main
2573
2582
65
runRandom
Ident
true
0
false
runRandom

29
src/main/scala/app/Life.scala
app
Life$
Object
app.Life$
main
2592
2617
66
foreach
Apply
false
0
false
args.foreach(runWithFile)

30
src/main/scala/app/Life.scala
app
Life$
Object
app.Life$
main
2592
2596
66
refArrayOps
Apply
false
0
false
args

31
src/main/scala/app/Life.scala
app
Life$
Object
app.Life$
$anonfun
2605
2616
66
runWithFile
Apply
false
0
false
runWithFile

32
src/main/scala/app/Life.scala
app
Life$
Object
app.Life$
main
2592
2617
66
foreach
Apply
true
0
false
args.foreach(runWithFile)

33
src/main/scala/app/Life.scala
app
Life$
Object
app.Life$
main
2506
2514
63
main
DefDef
false
0
false
def main

34
src/main/scala/app/Life.scala
app
Ansi$
Object
app.Ansi$
<init>
2695
2705
70
s
Apply
false
0
false
s"$esc[2J"

35
src/main/scala/app/Life.scala
app
Ansi$
Object
app.Ansi$
<init>
2734
2743
71
s
Apply
false
0
false
s"$esc[H"

36
src/main/scala/life/Bounds.scala
life
Bounds$
Object
life.Bounds$
intFor
2379
2395
61
getInt
Apply
false
0
false
config.getInt(s)

37
src/main/scala/life/Bounds.scala
life
Bounds$
Object
life.Bounds$
intFor
2355
2365
61
intFor
DefDef
false
0
false
def intFor

38
src/main/scala/life/Bounds.scala
life
Bounds$
Object
life.Bounds$
from
2414
2450
63
to
Apply
false
0
false
intFor("minRow") to intFor("maxRow")

39
src/main/scala/life/Bounds.scala
life
Bounds$
Object
life.Bounds$
from
2414
2430
63
intWrapper
Apply
false
0
false
intFor("minRow")

40
src/main/scala/life/Bounds.scala
life
Bounds$
Object
life.Bounds$
from
2414
2430
63
intFor
Apply
false
0
false
intFor("minRow")

41
src/main/scala/life/Bounds.scala
life
Bounds$
Object
life.Bounds$
from
2434
2450
63
intFor
Apply
false
0
false
intFor("maxRow")

42
src/main/scala/life/Bounds.scala
life
Bounds$
Object
life.Bounds$
from
2458
2500
64
to
Apply
false
0
false
intFor("minColumn") to intFor("maxColumn")

43
src/main/scala/life/Bounds.scala
life
Bounds$
Object
life.Bounds$
from
2458
2477
64
intWrapper
Apply
false
0
false
intFor("minColumn")

44
src/main/scala/life/Bounds.scala
life
Bounds$
Object
life.Bounds$
from
2458
2477
64
intFor
Apply
false
0
false
intFor("minColumn")

45
src/main/scala/life/Bounds.scala
life
Bounds$
Object
life.Bounds$
from
2481
2500
64
intFor
Apply
false
0
false
intFor("maxColumn")

46
src/main/scala/life/Bounds.scala
life
Bounds$
Object
life.Bounds$
from
2324
2332
60
from
DefDef
false
0
false
def from

47
src/main/scala/life/Cell.scala
life
Cell$package$
Object
life.Cell$package$
+
1853
1858
43
+
DefDef
false
0
false
def +

48
src/main/scala/life/Cell.scala
life
Cell$package$
Object
life.Cell$package$
neighbours
2057
2213
49
flatMap
Apply
false
0
false
for\n      deltaRow    <- -1 to 1\n      deltaColumn <- -1 to 1\n      if !(deltaRow == 0 && deltaColumn == 0)\n    yield cell + Position(deltaRow, deltaColumn)

49
src/main/scala/life/Cell.scala
life
Cell$package$
Object
life.Cell$package$
neighbours
2082
2089
50
to
Apply
false
0
false
-1 to 1

50
src/main/scala/life/Cell.scala
life
Cell$package$
Object
life.Cell$package$
neighbours
2082
2084
50
intWrapper
Apply
false
0
false
-1

51
src/main/scala/life/Cell.scala
life
Cell$package$
Object
life.Cell$package$
$anonfun
2096
2213
51
map
Apply
false
0
false
deltaColumn <- -1 to 1\n      if !(deltaRow == 0 && deltaColumn == 0)\n    yield cell + Position(deltaRow, deltaColumn)

52
src/main/scala/life/Cell.scala
life
Cell$package$
Object
life.Cell$package$
$anonfun
2096
2164
51
withFilter
Apply
false
0
false
deltaColumn <- -1 to 1\n      if !(deltaRow == 0 && deltaColumn == 0)

53
src/main/scala/life/Cell.scala
life
Cell$package$
Object
life.Cell$package$
$anonfun
2111
2118
51
to
Apply
false
0
false
-1 to 1

54
src/main/scala/life/Cell.scala
life
Cell$package$
Object
life.Cell$package$
$anonfun
2111
2113
51
intWrapper
Apply
false
0
false
-1

55
src/main/scala/life/Cell.scala
life
Cell$package$
Object
life.Cell$package$
$anonfun
2175
2213
53
+
Apply
false
0
false
cell + Position(deltaRow, deltaColumn)

56
src/main/scala/life/Cell.scala
life
Cell$package$
Object
life.Cell$package$
neighbours
2056
2221
53
toList
Select
false
0
false
(for\n      deltaRow    <- -1 to 1\n      deltaColumn <- -1 to 1\n      if !(deltaRow == 0 && deltaColumn == 0)\n    yield cell + Position(deltaRow, deltaColumn)).toList

57
src/main/scala/life/Cell.scala
life
Cell$package$
Object
life.Cell$package$
neighbours
2023
2037
48
neighbours
DefDef
false
0
false
def neighbours

58
src/main/scala/life/Cells.scala
life
Cells$
Object
life.Cells$
fromTextEx
1856
2014
45
wrapRefArray
Apply
false
0
false
s\n      .replace(" ", "")     // Remove spaces\n      .split("\\n")          // Split lines\n      .filterNot(_.isBlank) // Remove blank lines\n      .map(_.trim)

59
src/main/scala/life/Cells.scala
life
Cells$
Object
life.Cells$
fromTextEx
1856
2014
45
map
Apply
false
0
false
s\n      .replace(" ", "")     // Remove spaces\n      .split("\\n")          // Split lines\n      .filterNot(_.isBlank) // Remove blank lines\n      .map(_.trim)

60
src/main/scala/life/Cells.scala
life
Cells$
Object
life.Cells$
fromTextEx
1856
1973
45
refArrayOps
Apply
false
0
false
s\n      .replace(" ", "")     // Remove spaces\n      .split("\\n")          // Split lines\n      .filterNot(_.isBlank)

61
src/main/scala/life/Cells.scala
life
Cells$
Object
life.Cells$
fromTextEx
1856
1973
48
filterNot
Apply
false
0
false
s\n      .replace(" ", "")     // Remove spaces\n      .split("\\n")          // Split lines\n      .filterNot(_.isBlank)

62
src/main/scala/life/Cells.scala
life
Cells$
Object
life.Cells$
fromTextEx
1856
1921
45
refArrayOps
Apply
false
0
false
s\n      .replace(" ", "")     // Remove spaces\n      .split("\\n")

63
src/main/scala/life/Cells.scala
life
Cells$
Object
life.Cells$
fromTextEx
1856
1921
47
split
Apply
false
0
false
s\n      .replace(" ", "")     // Remove spaces\n      .split("\\n")

64
src/main/scala/life/Cells.scala
life
Cells$
Object
life.Cells$
fromTextEx
1856
1881
46
replace
Apply
false
0
false
s\n      .replace(" ", "")

65
src/main/scala/life/Cells.scala
life
Cells$
Object
life.Cells$
$anonfun
1963
1972
48
isBlank
Apply
false
0
false
_.isBlank

66
src/main/scala/life/Cells.scala
life
Cells$
Object
life.Cells$
$anonfun
2007
2013
49
trim
Apply
false
0
false
_.trim

67
src/main/scala/life/Cells.scala
life
Cells$
Object
life.Cells$
fromTextEx
1856
2060
50
toList
Select
false
0
false
s\n      .replace(" ", "")     // Remove spaces\n      .split("\\n")          // Split lines\n      .filterNot(_.isBlank) // Remove blank lines\n      .map(_.trim)          // Remove end of lines\n      .toList

68
src/main/scala/life/Cells.scala
life
Cells$
Object
life.Cells$
fromTextEx
2082
2100
51
map
Apply
false
0
false
rows.map(_.length)

69
src/main/scala/life/Cells.scala
life
Cells$
Object
life.Cells$
$anonfun
2091
2099
51
length
Apply
false
0
false
_.length

70
src/main/scala/life/Cells.scala
life
Cells$
Object
life.Cells$
fromTextEx
2105
2150
52
require
Apply
false
0
false
require(s.length > 0, "Invalid empty string")

71
src/main/scala/life/Cells.scala
life
Cells$
Object
life.Cells$
fromTextEx
2113
2121
52
length
Apply
false
0
false
s.length

72
src/main/scala/life/Cells.scala
life
Cells$
Object
life.Cells$
fromTextEx
2155
2237
53
require
Apply
false
0
false
require(Set.from(rowLengths).sizeIs == 1, s"Inconsistent row lengths $rowLengths")

73
src/main/scala/life/Cells.scala
life
Cells$
Object
life.Cells$
fromTextEx
2163
2195
53
==
Apply
false
0
false
Set.from(rowLengths).sizeIs == 1

74
src/main/scala/life/Cells.scala
life
Cells$
Object
life.Cells$
fromTextEx
2163
2183
53
from
Apply
false
0
false
Set.from(rowLengths)

75
src/main/scala/life/Cells.scala
life
Cells$
Object
life.Cells$
fromTextEx
2163
2166
53
Set
Ident
false
0
false
Set

76
src/main/scala/life/Cells.scala
life
Cells$
Object
life.Cells$
fromTextEx
2163
2190
53
sizeIs
Select
false
0
false
Set.from(rowLengths).sizeIs

77
src/main/scala/life/Cells.scala
life
Cells$
Object
life.Cells$
fromTextEx
2197
2236
53
s
Apply
false
0
false
s"Inconsistent row lengths $rowLengths"

78
src/main/scala/life/Cells.scala
life
Cells$
Object
life.Cells$
fromTextEx
2258
2380
54
flatMap
Apply
false
0
false
for\n      r <- 0 until rows.length\n      row = rows(r)\n      c <- 0 until row.length if row(c) != '.'\n    yield Cell(r, c)

79
src/main/scala/life/Cells.scala
life
Cells$
Object
life.Cells$
fromTextEx
2268
2312
55
map
Apply
false
0
false
r <- 0 until rows.length\n      row = rows(r)

80
src/main/scala/life/Cells.scala
life
Cells$
Object
life.Cells$
fromTextEx
2273
2292
55
until
Apply
false
0
false
0 until rows.length

81
src/main/scala/life/Cells.scala
life
Cells$
Object
life.Cells$
fromTextEx
2273
2274
55
intWrapper
Apply
false
0
false
0

82
src/main/scala/life/Cells.scala
life
Cells$
Object
life.Cells$
fromTextEx
2281
2292
55
length
Select
false
0
false
rows.length

83
src/main/scala/life/Cells.scala
life
Cells$
Object
life.Cells$
$anonfun
2305
2312
56
apply
Apply
false
0
false
rows(r)

84
src/main/scala/life/Cells.scala
life
Cells$
Object
life.Cells$
$anonfun
2268
2302
55
map
Apply
false
0
false
r <- 0 until rows.length\n      row

85
src/main/scala/life/Cells.scala
life
Cells$
Object
life.Cells$
$anonfun
2319
2380
57
map
Apply
false
0
false
c <- 0 until row.length if row(c) != '.'\n    yield Cell(r, c)

86
src/main/scala/life/Cells.scala
life
Cells$
Object
life.Cells$
$anonfun
2319
2359
57
withFilter
Apply
false
0
false
c <- 0 until row.length if row(c) != '.'

87
src/main/scala/life/Cells.scala
life
Cells$
Object
life.Cells$
$anonfun
2324
2342
57
until
Apply
false
0
false
0 until row.length

88
src/main/scala/life/Cells.scala
life
Cells$
Object
life.Cells$
$anonfun
2324
2325
57
intWrapper
Apply
false
0
false
0

89
src/main/scala/life/Cells.scala
life
Cells$
Object
life.Cells$
$anonfun
2332
2342
57
length
Apply
false
0
false
row.length

90
src/main/scala/life/Cells.scala
life
Cells$
Object
life.Cells$
$anonfun
2346
2352
57
apply
Apply
false
0
false
row(c)

91
src/main/scala/life/Cells.scala
life
Cells$
Object
life.Cells$
$anonfun
2346
2349
57
augmentString
Apply
false
0
false
row

92
src/main/scala/life/Cells.scala
life
Cells$
Object
life.Cells$
fromTextEx
2385
2400
59
toSet
Select
false
0
false
liveCells.toSet

93
src/main/scala/life/Cells.scala
life
Cells$
Object
life.Cells$
fromTextEx
1798
1820
44
fromTextEx
DefDef
false
0
false
private def fromTextEx

94
src/main/scala/life/Cells.scala
life
Cells$
Object
life.Cells$
fromText
2783
2801
70
apply
Apply
false
0
false
Try(fromTextEx(s))

95
src/main/scala/life/Cells.scala
life
Cells$
Object
life.Cells$
fromText
2787
2800
70
fromTextEx
Apply
false
0
false
fromTextEx(s)

96
src/main/scala/life/Cells.scala
life
Cells$
Object
life.Cells$
fromText
2814
2833
71
<none>
Block
false
0
false
case Success(cells)

97
src/main/scala/life/Cells.scala
life
Cells$
Object
life.Cells$
fromText
2870
2889
72
<none>
Block
false
0
false
case Failure(error)

98
src/main/scala/life/Cells.scala
life
Cells$
Object
life.Cells$
fromText
2912
2928
72
getMessage
Apply
false
0
false
error.getMessage

99
src/main/scala/life/Cells.scala
life
Cells$
Object
life.Cells$
fromText
2745
2757
69
fromText
DefDef
false
0
false
def fromText

100
src/main/scala/life/Cells.scala
life
Cells$
Object
life.Cells$
fromFilenameEx
3004
3056
75
fromFile
Apply
false
0
false
Source.fromFile(filename)(Codec.defaultCharsetCodec)

101
src/main/scala/life/Cells.scala
life
Cells$
Object
life.Cells$
fromFilenameEx
3030
3055
75
defaultCharsetCodec
Select
false
0
false
Codec.defaultCharsetCodec

102
src/main/scala/life/Cells.scala
life
Cells$
Object
life.Cells$
fromFilenameEx
3061
3105
76
fromTextEx
Apply
false
0
false
fromTextEx(source.getLines().mkString("\\n"))

103
src/main/scala/life/Cells.scala
life
Cells$
Object
life.Cells$
fromFilenameEx
3072
3104
76
mkString
Apply
false
0
false
source.getLines().mkString("\\n")

104
src/main/scala/life/Cells.scala
life
Cells$
Object
life.Cells$
fromFilenameEx
3072
3089
76
getLines
Apply
false
0
false
source.getLines()

105
src/main/scala/life/Cells.scala
life
Cells$
Object
life.Cells$
fromFilenameEx
2933
2959
74
fromFilenameEx
DefDef
false
0
false
private def fromFilenameEx

106
src/main/scala/life/Cells.scala
life
Cells$
Object
life.Cells$
fromFilename
3542
3571
87
apply
Apply
false
0
false
Try(fromFilenameEx(filename))

107
src/main/scala/life/Cells.scala
life
Cells$
Object
life.Cells$
fromFilename
3546
3570
87
fromFilenameEx
Apply
false
0
false
fromFilenameEx(filename)

108
src/main/scala/life/Cells.scala
life
Cells$
Object
life.Cells$
fromFilename
3584
3603
88
<none>
Block
false
0
false
case Success(cells)

109
src/main/scala/life/Cells.scala
life
Cells$
Object
life.Cells$
fromFilename
3640
3659
89
<none>
Block
false
0
false
case Failure(error)

110
src/main/scala/life/Cells.scala
life
Cells$
Object
life.Cells$
fromFilename
3682
3698
89
getMessage
Apply
false
0
false
error.getMessage

111
src/main/scala/life/Cells.scala
life
Cells$
Object
life.Cells$
fromFilename
3493
3509
86
fromFilename
DefDef
false
0
false
def fromFilename

112
src/main/scala/life/Cells.scala
life
Cells$package$
Object
life.Cells$package$
bounds
3772
3784
93
toList
Select
false
0
false
cells.toList

113
src/main/scala/life/Cells.scala
life
Cells$package$
Object
life.Cells$package$
bounds
3757
3769
93
apply
Apply
false
0
false
head :: rest

114
src/main/scala/life/Cells.scala
life
Cells$package$
Object
life.Cells$package$
bounds
3827
3847
94
to
Apply
false
0
false
head.row to head.row

115
src/main/scala/life/Cells.scala
life
Cells$package$
Object
life.Cells$package$
bounds
3827
3835
94
intWrapper
Apply
false
0
false
head.row

116
src/main/scala/life/Cells.scala
life
Cells$package$
Object
life.Cells$package$
bounds
3849
3875
94
to
Apply
false
0
false
head.column to head.column

117
src/main/scala/life/Cells.scala
life
Cells$package$
Object
life.Cells$package$
bounds
3849
3860
94
intWrapper
Apply
false
0
false
head.column

118
src/main/scala/life/Cells.scala
life
Cells$package$
Object
life.Cells$package$
updateBounds
3956
3982
98
<none>
Block
false
0
false
case Bounds(rows, columns)

119
src/main/scala/life/Cells.scala
life
Cells$package$
Object
life.Cells$package$
updateBounds
4017
4077
99
to
Apply
false
0
false
Math.min(rows.min, cell.row) to Math.max(rows.max, cell.row)

120
src/main/scala/life/Cells.scala
life
Cells$package$
Object
life.Cells$package$
updateBounds
4017
4045
99
intWrapper
Apply
false
0
false
Math.min(rows.min, cell.row)

121
src/main/scala/life/Cells.scala
life
Cells$package$
Object
life.Cells$package$
updateBounds
4017
4045
99
min
Apply
false
0
false
Math.min(rows.min, cell.row)

122
src/main/scala/life/Cells.scala
life
Cells$package$
Object
life.Cells$package$
updateBounds
4026
4034
99
min
Apply
false
0
false
rows.min

123
src/main/scala/life/Cells.scala
life
Cells$package$
Object
life.Cells$package$
updateBounds
4049
4077
99
max
Apply
false
0
false
Math.max(rows.max, cell.row)

124
src/main/scala/life/Cells.scala
life
Cells$package$
Object
life.Cells$package$
updateBounds
4058
4066
99
max
Apply
false
0
false
rows.max

125
src/main/scala/life/Cells.scala
life
Cells$package$
Object
life.Cells$package$
updateBounds
4109
4181
100
to
Apply
false
0
false
Math.min(columns.min, cell.column) to Math.max(columns.max, cell.column)

126
src/main/scala/life/Cells.scala
life
Cells$package$
Object
life.Cells$package$
updateBounds
4109
4143
100
intWrapper
Apply
false
0
false
Math.min(columns.min, cell.column)

127
src/main/scala/life/Cells.scala
life
Cells$package$
Object
life.Cells$package$
updateBounds
4109
4143
100
min
Apply
false
0
false
Math.min(columns.min, cell.column)

128
src/main/scala/life/Cells.scala
life
Cells$package$
Object
life.Cells$package$
updateBounds
4118
4129
100
min
Apply
false
0
false
columns.min

129
src/main/scala/life/Cells.scala
life
Cells$package$
Object
life.Cells$package$
updateBounds
4147
4181
100
max
Apply
false
0
false
Math.max(columns.max, cell.column)

130
src/main/scala/life/Cells.scala
life
Cells$package$
Object
life.Cells$package$
updateBounds
4156
4167
100
max
Apply
false
0
false
columns.max

131
src/main/scala/life/Cells.scala
life
Cells$package$
Object
life.Cells$package$
updateBounds
3882
3898
96
updateBounds
DefDef
false
0
false
def updateBounds

132
src/main/scala/life/Cells.scala
life
Cells$package$
Object
life.Cells$package$
bounds
4233
4272
103
foldLeft
Apply
false
0
false
rest.foldLeft(headBounds)(updateBounds)

133
src/main/scala/life/Cells.scala
life
Cells$package$
Object
life.Cells$package$
$anonfun
4259
4271
103
updateBounds
Apply
false
0
false
updateBounds

134
src/main/scala/life/Cells.scala
life
Cells$package$
Object
life.Cells$package$
bounds
3728
3738
92
bounds
DefDef
false
0
false
def bounds

135
src/main/scala/life/Cells.scala
life
Cells$package$
Object
life.Cells$package$
rotate
4384
4391
108
modulus
Ident
true
0
false
modulus

136
src/main/scala/life/Cells.scala
life
Cells$package$
Object
life.Cells$package$
rotate
4445
4457
110
bounds
Apply
false
0
false
cells.bounds

137
src/main/scala/life/Cells.scala
life
Cells$package$
Object
life.Cells$package$
rotate
4489
4517
111
from
Apply
false
0
false
IndexedSeq.from(bounds.rows)

138
src/main/scala/life/Cells.scala
life
Cells$package$
Object
life.Cells$package$
rotate
4489
4499
111
IndexedSeq
Ident
false
0
false
IndexedSeq

139
src/main/scala/life/Cells.scala
life
Cells$package$
Object
life.Cells$package$
rotate
4549
4583
112
from
Apply
false
0
false
IndexedSeq.from(boundsRow.reverse)

140
src/main/scala/life/Cells.scala
life
Cells$package$
Object
life.Cells$package$
rotate
4549
4559
112
IndexedSeq
Ident
false
0
false
IndexedSeq

141
src/main/scala/life/Cells.scala
life
Cells$package$
Object
life.Cells$package$
rotate
4565
4582
112
reverse
Select
false
0
false
boundsRow.reverse

142
src/main/scala/life/Cells.scala
life
Cells$package$
Object
life.Cells$package$
rotate
4615
4646
113
from
Apply
false
0
false
IndexedSeq.from(bounds.columns)

143
src/main/scala/life/Cells.scala
life
Cells$package$
Object
life.Cells$package$
rotate
4615
4625
113
IndexedSeq
Ident
false
0
false
IndexedSeq

144
src/main/scala/life/Cells.scala
life
Cells$package$
Object
life.Cells$package$
rotate
4678
4715
114
from
Apply
false
0
false
IndexedSeq.from(boundsColumn.reverse)

145
src/main/scala/life/Cells.scala
life
Cells$package$
Object
life.Cells$package$
rotate
4678
4688
114
IndexedSeq
Ident
false
0
false
IndexedSeq

146
src/main/scala/life/Cells.scala
life
Cells$package$
Object
life.Cells$package$
rotate
4694
4714
114
reverse
Select
false
0
false
boundsColumn.reverse

147
src/main/scala/life/Cells.scala
life
Cells$package$
Object
life.Cells$package$
rotate0
4721
4732
116
rotate0
DefDef
false
0
false
def rotate0

148
src/main/scala/life/Cells.scala
life
Cells$package$
Object
life.Cells$package$
rotate90
4817
4844
117
apply
Apply
false
0
false
boundsRowReversed(cell.row)

149
src/main/scala/life/Cells.scala
life
Cells$package$
Object
life.Cells$package$
rotate90
4771
4783
117
rotate90
DefDef
false
0
false
def rotate90

150
src/main/scala/life/Cells.scala
life
Cells$package$
Object
life.Cells$package$
rotate180
4883
4910
118
apply
Apply
false
0
false
boundsRowReversed(cell.row)

151
src/main/scala/life/Cells.scala
life
Cells$package$
Object
life.Cells$package$
rotate180
4912
4945
118
apply
Apply
false
0
false
boundsColumnReversed(cell.column)

152
src/main/scala/life/Cells.scala
life
Cells$package$
Object
life.Cells$package$
rotate180
4850
4863
118
rotate180
DefDef
false
0
false
def rotate180

153
src/main/scala/life/Cells.scala
life
Cells$package$
Object
life.Cells$package$
rotate270
4984
5017
119
apply
Apply
false
0
false
boundsColumnReversed(cell.column)

154
src/main/scala/life/Cells.scala
life
Cells$package$
Object
life.Cells$package$
rotate270
4951
4964
119
rotate270
DefDef
false
0
false
def rotate270

155
src/main/scala/life/Cells.scala
life
Cells$package$
Object
life.Cells$package$
rotate
5047
5105
121
apply
Apply
false
0
false
IndexedSeq(rotate0, rotate90, rotate180, rotate270)(cycle)

156
src/main/scala/life/Cells.scala
life
Cells$package$
Object
life.Cells$package$
rotate
5047
5098
121
apply
Apply
false
0
false
IndexedSeq(rotate0, rotate90, rotate180, rotate270)

157
src/main/scala/life/Cells.scala
life
Cells$package$
Object
life.Cells$package$
rotate
5047
5057
121
IndexedSeq
Ident
false
0
false
IndexedSeq

158
src/main/scala/life/Cells.scala
life
Cells$package$
Object
life.Cells$package$
$anonfun
5058
5065
121
rotate0
Apply
false
0
false
rotate0

159
src/main/scala/life/Cells.scala
life
Cells$package$
Object
life.Cells$package$
$anonfun
5067
5075
121
rotate90
Apply
false
0
false
rotate90

160
src/main/scala/life/Cells.scala
life
Cells$package$
Object
life.Cells$package$
$anonfun
5077
5086
121
rotate180
Apply
false
0
false
rotate180

161
src/main/scala/life/Cells.scala
life
Cells$package$
Object
life.Cells$package$
$anonfun
5088
5097
121
rotate270
Apply
false
0
false
rotate270

162
src/main/scala/life/Cells.scala
life
Cells$package$
Object
life.Cells$package$
rotate
5110
5127
122
map
Apply
false
0
false
cells.map(rotate)

163
src/main/scala/life/Cells.scala
life
Cells$package$
Object
life.Cells$package$
rotate
4276
4286
105
rotate
DefDef
false
0
false
def rotate

164
src/main/scala/life/Generations.scala
life
Generations
Class
life.Generations
<init>
2067
2071
43
List
Ident
false
0
false
List

165
src/main/scala/life/Generations.scala
life
Generations
Class
life.Generations
<init>
2067
2077
43
empty
Select
false
0
false
List.empty

166
src/main/scala/life/Generations.scala
life
Generations
Class
life.Generations
nextWithHistory
2171
2196
46
nextGeneration
Apply
false
0
false
current._1.nextGeneration

167
src/main/scala/life/Generations.scala
life
Generations
Class
life.Generations
nextWithHistory
2171
2181
46
_1
Select
false
0
false
current._1

168
src/main/scala/life/Generations.scala
life
Generations
Class
life.Generations
nextWithHistory
2208
2226
47
+:
Apply
false
0
false
next +: current._2

169
src/main/scala/life/Generations.scala
life
Generations
Class
life.Generations
nextWithHistory
2216
2226
47
_2
Select
false
0
false
current._2

170
src/main/scala/life/Generations.scala
life
Generations
Class
life.Generations
nextWithHistory
2089
2116
45
nextWithHistory
DefDef
false
0
false
private def nextWithHistory

171
src/main/scala/life/Generations.scala
life
Generations
Class
life.Generations
<init>
2256
2298
49
iterate
Apply
false
0
false
Iterator.iterate(initial)(nextWithHistory)

172
src/main/scala/life/Generations.scala
life
Generations
Class
life.Generations
<init>
2256
2264
49
Iterator
Ident
false
0
false
Iterator

173
src/main/scala/life/Generations.scala
life
Generations
Class
life.Generations
$anonfun
2282
2297
49
nextWithHistory
Apply
false
0
false
nextWithHistory

174
src/main/scala/life/Generations.scala
life
Generations
Class
life.Generations
<init>
2256
2307
49
buffered
Select
false
0
false
Iterator.iterate(initial)(nextWithHistory).buffered

175
src/main/scala/life/Generations.scala
life
Generations
Class
life.Generations
hasNext
2524
2539
56
head
Select
false
0
false
iterations.head

176
src/main/scala/life/Generations.scala
life
Generations
Class
life.Generations
hasNext
2544
2571
57
count
Apply
false
0
false
peek._2.count(_ == peek._1)

177
src/main/scala/life/Generations.scala
life
Generations
Class
life.Generations
hasNext
2544
2551
57
_2
Select
false
0
false
peek._2

178
src/main/scala/life/Generations.scala
life
Generations
Class
life.Generations
$anonfun
2563
2570
57
_1
Select
false
0
false
peek._1

179
src/main/scala/life/Generations.scala
life
Generations
Class
life.Generations
hasNext
2477
2497
55
hasNext
DefDef
false
0
false
override def hasNext

180
src/main/scala/life/Generations.scala
life
Generations
Class
life.Generations
next
2829
2844
63
next
Apply
false
0
false
iterations.next

181
src/main/scala/life/Generations.scala
life
Generations
Class
life.Generations
next
2829
2847
63
_1
Select
false
0
false
iterations.next._1

182
src/main/scala/life/Generations.scala
life
Generations
Class
life.Generations
next
2802
2819
63
next
DefDef
false
0
false
override def next

183
src/main/scala/life/Patterns.scala
life
Patterns$
Object
life.Patterns$
fromPattern
1824
1894
40
fromResource
Apply
false
0
false
Source.fromResource(s"patterns/$name.life")(Codec.defaultCharsetCodec)

184
src/main/scala/life/Patterns.scala
life
Patterns$
Object
life.Patterns$
fromPattern
1844
1866
40
s
Apply
false
0
false
s"patterns/$name.life"

185
src/main/scala/life/Patterns.scala
life
Patterns$
Object
life.Patterns$
fromPattern
1868
1893
40
defaultCharsetCodec
Select
false
0
false
Codec.defaultCharsetCodec

186
src/main/scala/life/Patterns.scala
life
Patterns$
Object
life.Patterns$
fromPattern
1899
1959
41
fold
Apply
false
0
false
Cells.fromText(source.mkString).toOption.fold(???)(identity)

187
src/main/scala/life/Patterns.scala
life
Patterns$
Object
life.Patterns$
fromPattern
1899
1930
41
fromText
Apply
false
0
false
Cells.fromText(source.mkString)

188
src/main/scala/life/Patterns.scala
life
Patterns$
Object
life.Patterns$
fromPattern
1914
1929
41
mkString
Select
false
0
false
source.mkString

189
src/main/scala/life/Patterns.scala
life
Patterns$
Object
life.Patterns$
fromPattern
1899
1939
41
toOption
Select
false
0
false
Cells.fromText(source.mkString).toOption

190
src/main/scala/life/Patterns.scala
life
Patterns$
Object
life.Patterns$
fromPattern
1945
1948
41
???
Ident
false
0
false
???

191
src/main/scala/life/Patterns.scala
life
Patterns$
Object
life.Patterns$
$anonfun
1950
1958
41
identity
Apply
false
0
false
identity

192
src/main/scala/life/Patterns.scala
life
Patterns$
Object
life.Patterns$
fromPattern
1760
1783
39
fromPattern
DefDef
false
0
false
private def fromPattern

193
src/main/scala/life/Patterns.scala
life
Patterns$
Object
life.Patterns$
beacon
2104
2125
46
fromPattern
Apply
false
0
false
fromPattern("beacon")

194
src/main/scala/life/Patterns.scala
life
Patterns$
Object
life.Patterns$
beacon
2091
2101
46
beacon
DefDef
false
0
false
def beacon

195
src/main/scala/life/Patterns.scala
life
Patterns$
Object
life.Patterns$
beehive
2318
2340
52
fromPattern
Apply
false
0
false
fromPattern("beehive")

196
src/main/scala/life/Patterns.scala
life
Patterns$
Object
life.Patterns$
beehive
2304
2315
52
beehive
DefDef
false
0
false
def beehive

197
src/main/scala/life/Patterns.scala
life
Patterns$
Object
life.Patterns$
blinker
2488
2510
57
fromPattern
Apply
false
0
false
fromPattern("blinker")

198
src/main/scala/life/Patterns.scala
life
Patterns$
Object
life.Patterns$
blinker
2474
2485
57
blinker
DefDef
false
0
false
def blinker

199
src/main/scala/life/Patterns.scala
life
Patterns$
Object
life.Patterns$
block
2719
2739
63
fromPattern
Apply
false
0
false
fromPattern("block")

200
src/main/scala/life/Patterns.scala
life
Patterns$
Object
life.Patterns$
block
2707
2716
63
block
DefDef
false
0
false
def block

201
src/main/scala/life/Patterns.scala
life
Patterns$
Object
life.Patterns$
boat
2920
2939
69
fromPattern
Apply
false
0
false
fromPattern("boat")

202
src/main/scala/life/Patterns.scala
life
Patterns$
Object
life.Patterns$
boat
2909
2917
69
boat
DefDef
false
0
false
def boat

203
src/main/scala/life/Patterns.scala
life
Patterns$
Object
life.Patterns$
glider
3093
3114
74
fromPattern
Apply
false
0
false
fromPattern("glider")

204
src/main/scala/life/Patterns.scala
life
Patterns$
Object
life.Patterns$
glider
3080
3090
74
glider
DefDef
false
0
false
def glider

205
src/main/scala/life/Patterns.scala
life
Patterns$
Object
life.Patterns$
gliderGunGosper
3335
3365
80
fromPattern
Apply
false
0
false
fromPattern("gliderGunGosper")

206
src/main/scala/life/Patterns.scala
life
Patterns$
Object
life.Patterns$
gliderGunGosper
3313
3332
80
gliderGunGosper
DefDef
false
0
false
def gliderGunGosper

207
src/main/scala/life/Patterns.scala
life
Patterns$
Object
life.Patterns$
loaf
3531
3550
85
fromPattern
Apply
false
0
false
fromPattern("loaf")

208
src/main/scala/life/Patterns.scala
life
Patterns$
Object
life.Patterns$
loaf
3520
3528
85
loaf
DefDef
false
0
false
def loaf

209
src/main/scala/life/Patterns.scala
life
Patterns$
Object
life.Patterns$
pentaDecathlon
3700
3729
90
fromPattern
Apply
false
0
false
fromPattern("pentaDecathlon")

210
src/main/scala/life/Patterns.scala
life
Patterns$
Object
life.Patterns$
pentaDecathlon
3679
3697
90
pentaDecathlon
DefDef
false
0
false
def pentaDecathlon

211
src/main/scala/life/Patterns.scala
life
Patterns$
Object
life.Patterns$
pulsar
3876
3897
95
fromPattern
Apply
false
0
false
fromPattern("pulsar")

212
src/main/scala/life/Patterns.scala
life
Patterns$
Object
life.Patterns$
pulsar
3863
3873
95
pulsar
DefDef
false
0
false
def pulsar

213
src/main/scala/life/Patterns.scala
life
Patterns$
Object
life.Patterns$
spaceshipLightweight
4078
4113
100
fromPattern
Apply
false
0
false
fromPattern("spaceshipLightweight")

214
src/main/scala/life/Patterns.scala
life
Patterns$
Object
life.Patterns$
spaceshipLightweight
4051
4075
100
spaceshipLightweight
DefDef
false
0
false
def spaceshipLightweight

215
src/main/scala/life/Patterns.scala
life
Patterns$
Object
life.Patterns$
toad
4252
4271
105
fromPattern
Apply
false
0
false
fromPattern("toad")

216
src/main/scala/life/Patterns.scala
life
Patterns$
Object
life.Patterns$
toad
4241
4249
105
toad
DefDef
false
0
false
def toad

217
src/main/scala/life/Patterns.scala
life
Patterns$
Object
life.Patterns$
tub
4454
4472
111
fromPattern
Apply
false
0
false
fromPattern("tub")

218
src/main/scala/life/Patterns.scala
life
Patterns$
Object
life.Patterns$
tub
4444
4451
111
tub
DefDef
false
0
false
def tub

219
src/main/scala/life/Patterns.scala
life
Patterns$
Object
life.Patterns$
random
4740
4862
120
flatMap
Apply
false
0
false
for\n      row    <- board.rows\n      column <- board.columns\n      if Random.nextDouble <= 0.2\n    yield Cell(row, column)

220
src/main/scala/life/Patterns.scala
life
Patterns$
Object
life.Patterns$
$anonfun
4777
4862
122
map
Apply
false
0
false
column <- board.columns\n      if Random.nextDouble <= 0.2\n    yield Cell(row, column)

221
src/main/scala/life/Patterns.scala
life
Patterns$
Object
life.Patterns$
$anonfun
4777
4834
122
withFilter
Apply
false
0
false
column <- board.columns\n      if Random.nextDouble <= 0.2

222
src/main/scala/life/Patterns.scala
life
Patterns$
Object
life.Patterns$
$anonfun
4810
4827
123
nextDouble
Apply
false
0
false
Random.nextDouble

223
src/main/scala/life/Patterns.scala
life
Patterns$
Object
life.Patterns$
random
4739
4869
124
toSet
Select
false
0
false
(for\n      row    <- board.rows\n      column <- board.columns\n      if Random.nextDouble <= 0.2\n    yield Cell(row, column)).toSet

224
src/main/scala/life/Patterns.scala
life
Patterns$
Object
life.Patterns$
random
4700
4710
119
random
DefDef
false
0
false
def random

225
src/main/scala/life/World.scala
life
World$
Object
life.World$
withCells
2660
2673
52
withCells
DefDef
false
0
false
def withCells

226
src/main/scala/life/World.scala
life
World$package$
Object
life.World$package$
withinRange
2835
2848
56
contains
Apply
false
0
false
r.contains(i)

227
src/main/scala/life/World.scala
life
World$package$
Object
life.World$package$
withinRange
2796
2811
56
withinRange
DefDef
false
0
false
def withinRange

228
src/main/scala/life/World.scala
life
World$package$
Object
life.World$package$
withinBounds
2892
2918
57
withinRange
Apply
false
0
false
withinRange(b.rows, c.row)

229
src/main/scala/life/World.scala
life
World$package$
Object
life.World$package$
withinBounds
2922
2954
57
withinRange
Apply
false
0
false
withinRange(b.columns, c.column)

230
src/main/scala/life/World.scala
life
World$package$
Object
life.World$package$
withinBounds
2853
2869
57
withinBounds
DefDef
false
0
false
def withinBounds

231
src/main/scala/life/World.scala
life
World$package$
Object
life.World$package$
cellsInBounds
2998
3033
58
filter
Apply
false
0
false
w.liveCells.filter(withinBounds(b))

232
src/main/scala/life/World.scala
life
World$package$
Object
life.World$package$
$anonfun
3017
3032
58
withinBounds
Apply
false
0
false
withinBounds(b)

233
src/main/scala/life/World.scala
life
World$package$
Object
life.World$package$
cellsInBounds
2959
2976
58
cellsInBounds
DefDef
false
0
false
def cellsInBounds

234
src/main/scala/life/World.scala
life
World$package$
Object
life.World$package$
removingOffworlders
3038
3121
59
getOrElse
Apply
false
0
false
w.maybeBounds.map(bounds => w.copy(liveCells = cellsInBounds(bounds))).getOrElse(w)

235
src/main/scala/life/World.scala
life
World$package$
Object
life.World$package$
removingOffworlders
3038
3108
59
map
Apply
false
0
false
w.maybeBounds.map(bounds => w.copy(liveCells = cellsInBounds(bounds)))

236
src/main/scala/life/World.scala
life
World$package$
Object
life.World$package$
$anonfun
3085
3106
59
cellsInBounds
Apply
false
0
false
cellsInBounds(bounds)

237
src/main/scala/life/World.scala
life
World$package$
Object
life.World$package$
removingOffworlders
2751
2782
55
removingOffworlders
DefDef
false
0
false
private def removingOffworlders

238
src/main/scala/life/World.scala
life
World$package$
Object
life.World$package$
withBounds
3441
3495
68
removingOffworlders
Apply
false
0
false
w.copy(maybeBounds = Some(bounds)).removingOffworlders

239
src/main/scala/life/World.scala
life
World$package$
Object
life.World$package$
withBounds
3401
3415
68
withBounds
DefDef
false
0
false
def withBounds

240
src/main/scala/life/World.scala
life
World$package$
Object
life.World$package$
unbounded
3559
3572
73
unbounded
DefDef
false
0
false
def unbounded

241
src/main/scala/life/World.scala
life
World$package$
Object
life.World$package$
withViewport
3779
3795
81
withViewport
DefDef
false
0
false
def withViewport

242
src/main/scala/life/World.scala
life
World$package$
Object
life.World$package$
withoutViewport
4038
4057
87
withoutViewport
DefDef
false
0
false
def withoutViewport

243
src/main/scala/life/World.scala
life
World$package$
Object
life.World$package$
withCells
4459
4480
98
map
Apply
false
0
false
cells.map(_ + offset)

244
src/main/scala/life/World.scala
life
World$package$
Object
life.World$package$
$anonfun
4469
4479
98
+
Apply
false
0
false
_ + offset

245
src/main/scala/life/World.scala
life
World$package$
Object
life.World$package$
withCells
4485
4551
99
removingOffworlders
Apply
false
0
false
w.copy(liveCells = w.liveCells ++ offsetCells).removingOffworlders

246
src/main/scala/life/World.scala
life
World$package$
Object
life.World$package$
withCells
4504
4530
99
++
Apply
false
0
false
w.liveCells ++ offsetCells

247
src/main/scala/life/World.scala
life
World$package$
Object
life.World$package$
withCells
4382
4395
97
withCells
DefDef
false
0
false
def withCells

248
src/main/scala/life/World.scala
life
World$package$
Object
life.World$package$
isLive
4597
4623
101
contains
Apply
false
0
false
w.liveCells.contains(cell)

249
src/main/scala/life/World.scala
life
World$package$
Object
life.World$package$
isLive
4555
4573
101
isLive
DefDef
false
0
false
private def isLive

250
src/main/scala/life/World.scala
life
World$package$
Object
life.World$package$
neighbourCount
4673
4702
103
count
Apply
false
0
false
cell.neighbours.count(isLive)

251
src/main/scala/life/World.scala
life
World$package$
Object
life.World$package$
neighbourCount
4673
4688
103
neighbours
Apply
false
0
false
cell.neighbours

252
src/main/scala/life/World.scala
life
World$package$
Object
life.World$package$
$anonfun
4695
4701
103
isLive
Apply
false
0
false
isLive

253
src/main/scala/life/World.scala
life
World$package$
Object
life.World$package$
neighbourCount
4627
4653
103
neighbourCount
DefDef
false
0
false
private def neighbourCount

254
src/main/scala/life/World.scala
life
World$package$
Object
life.World$package$
nextGeneration
4850
4887
109
flatten
Apply
false
0
false
w.liveCells.map(_.neighbours).flatten

255
src/main/scala/life/World.scala
life
World$package$
Object
life.World$package$
nextGeneration
4850
4879
109
map
Apply
false
0
false
w.liveCells.map(_.neighbours)

256
src/main/scala/life/World.scala
life
World$package$
Object
life.World$package$
$anonfun
4866
4878
109
neighbours
Apply
false
0
false
_.neighbours

257
src/main/scala/life/World.scala
life
World$package$
Object
life.World$package$
nextGeneration
4914
4942
110
++
Apply
false
0
false
w.liveCells ++ allNeighbours

258
src/main/scala/life/World.scala
life
World$package$
Object
life.World$package$
nextGeneration
4969
5012
111
map
Apply
false
0
false
allCells.map(c => (c, w.neighbourCount(c)))

259
src/main/scala/life/World.scala
life
World$package$
Object
life.World$package$
$anonfun
4991
5010
111
neighbourCount
Apply
false
0
false
w.neighbourCount(c)

260
src/main/scala/life/World.scala
life
World$package$
Object
life.World$package$
nextGeneration
5039
5109
112
map
Apply
false
0
false
neighbourCounts.filter((_, count) => count < 2 || count > 3).map(_._1)

261
src/main/scala/life/World.scala
life
World$package$
Object
life.World$package$
nextGeneration
5039
5099
112
filter
Apply
false
0
false
neighbourCounts.filter((_, count) => count < 2 || count > 3)

262
src/main/scala/life/World.scala
life
World$package$
Object
life.World$package$
$anonfun
5104
5108
112
_1
Select
false
0
false
_._1

263
src/main/scala/life/World.scala
life
World$package$
Object
life.World$package$
nextGeneration
5136
5194
113
map
Apply
false
0
false
neighbourCounts.filter((_, count) => count == 3).map(_._1)

264
src/main/scala/life/World.scala
life
World$package$
Object
life.World$package$
nextGeneration
5136
5184
113
filter
Apply
false
0
false
neighbourCounts.filter((_, count) => count == 3)

265
src/main/scala/life/World.scala
life
World$package$
Object
life.World$package$
$anonfun
5189
5193
113
_1
Select
false
0
false
_._1

266
src/main/scala/life/World.scala
life
World$package$
Object
life.World$package$
nextGeneration
5199
5277
114
removingOffworlders
Apply
false
0
false
w.copy(liveCells = w.liveCells -- dyingCells ++ bornCells).removingOffworlders

267
src/main/scala/life/World.scala
life
World$package$
Object
life.World$package$
nextGeneration
5218
5256
114
++
Apply
false
0
false
w.liveCells -- dyingCells ++ bornCells

268
src/main/scala/life/World.scala
life
World$package$
Object
life.World$package$
nextGeneration
5218
5243
114
--
Apply
false
0
false
w.liveCells -- dyingCells

269
src/main/scala/life/World.scala
life
World$package$
Object
life.World$package$
nextGeneration
4796
4814
108
nextGeneration
DefDef
false
0
false
def nextGeneration

270
src/main/scala/life/World.scala
life
World$package$
Object
life.World$package$
prettified
5402
5472
120
getOrElse
Apply
false
0
false
w.maybeViewport.getOrElse(w.maybeBounds.getOrElse(w.liveCells.bounds))

271
src/main/scala/life/World.scala
life
World$package$
Object
life.World$package$
prettified
5428
5471
120
getOrElse
Apply
false
0
false
w.maybeBounds.getOrElse(w.liveCells.bounds)

272
src/main/scala/life/World.scala
life
World$package$
Object
life.World$package$
prettified
5452
5470
120
bounds
Apply
false
0
false
w.liveCells.bounds

273
src/main/scala/life/World.scala
life
World$package$
Object
life.World$package$
rowString
5516
5631
122
map
Apply
false
0
false
for\n        c <- bounds.columns\n        cellChar = if w.isLive(Cell(r, c)) then "* " else "  "\n      yield cellChar

274
src/main/scala/life/World.scala
life
World$package$
Object
life.World$package$
rowString
5528
5610
123
map
Apply
false
0
false
c <- bounds.columns\n        cellChar = if w.isLive(Cell(r, c)) then "* " else "  "

275
src/main/scala/life/World.scala
life
World$package$
Object
life.World$package$
$anonfun
5570
5590
124
isLive
Apply
false
0
false
w.isLive(Cell(r, c))

276
src/main/scala/life/World.scala
life
World$package$
Object
life.World$package$
$anonfun
5596
5600
124
<none>
Literal
true
0
false
"* "

277
src/main/scala/life/World.scala
life
World$package$
Object
life.World$package$
$anonfun
5606
5610
124
<none>
Literal
true
0
false
"  "

278
src/main/scala/life/World.scala
life
World$package$
Object
life.World$package$
$anonfun
5528
5564
123
cellChar
Typed
false
0
false
c <- bounds.columns\n        cellChar

279
src/main/scala/life/World.scala
life
World$package$
Object
life.World$package$
rowString
5515
5641
125
mkString
Select
false
0
false
(for\n        c <- bounds.columns\n        cellChar = if w.isLive(Cell(r, c)) then "* " else "  "\n      yield cellChar).mkString

280
src/main/scala/life/World.scala
life
World$package$
Object
life.World$package$
rowString
5477
5490
121
rowString
DefDef
false
0
false
def rowString

281
src/main/scala/life/World.scala
life
World$package$
Object
life.World$package$
prettified
5646
5706
127
mkString
Apply
false
0
false
(for r <- bounds.rows\n    yield rowString(r)).mkString("\\n")

282
src/main/scala/life/World.scala
life
World$package$
Object
life.World$package$
prettified
5647
5690
126
map
Apply
false
0
false
for r <- bounds.rows\n    yield rowString(r)

283
src/main/scala/life/World.scala
life
World$package$
Object
life.World$package$
$anonfun
5678
5690
127
rowString
Apply
false
0
false
rowString(r)

284
src/main/scala/life/World.scala
life
World$package$
Object
life.World$package$
prettified
5360
5374
119
prettified
DefDef
false
0
false
def prettified

