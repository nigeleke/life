# Coverage data, format version: 3.0
# Statement data:
# - id
# - source path
# - package name
# - class name
# - class type (Class, Object or Trait)
# - full class name
# - method name
# - start offset
# - end offset
# - line number
# - symbol name
# - tree name
# - is branch
# - invocations count
# - is ignored
# - description (can be multi-line)
# '' sign
# ------------------------------------------
0
src/main/scala/app/Life.scala
app
Life
Object
app.Life
<init>
1713
1751
42
getConfig
Apply
false
0
false
ConfigFactory.load().getConfig("life")

1
src/main/scala/app/Life.scala
app
Life
Object
app.Life
<init>
1713
1733
42
load
Apply
false
0
false
ConfigFactory.load()

2
src/main/scala/app/Life.scala
app
Life
Object
app.Life
<init>
1775
1828
43
from
Apply
false
0
false
Bounds.from(config.getConfig("defaults.boardBounds"))

3
src/main/scala/app/Life.scala
app
Life
Object
app.Life
<init>
1787
1827
43
getConfig
Apply
false
0
false
config.getConfig("defaults.boardBounds")

4
src/main/scala/app/Life.scala
app
Life
Object
app.Life
<init>
1852
1908
44
from
Apply
false
0
false
Bounds.from(config.getConfig("defaults.viewportBounds"))

5
src/main/scala/app/Life.scala
app
Life
Object
app.Life
<init>
1864
1907
44
getConfig
Apply
false
0
false
config.getConfig("defaults.viewportBounds")

6
src/main/scala/app/Life.scala
app
Life
Object
app.Life
iterateGenerations
1988
2051
47
withViewport
Apply
false
0
false
World.withCells(cells).withBounds(board).withViewport(viewport)

7
src/main/scala/app/Life.scala
app
Life
Object
app.Life
iterateGenerations
1988
2028
47
withBounds
Apply
false
0
false
World.withCells(cells).withBounds(board)

8
src/main/scala/app/Life.scala
app
Life
Object
app.Life
iterateGenerations
1988
2010
47
withCells
Apply
false
0
false
World.withCells(cells)

9
src/main/scala/app/Life.scala
app
Life
Object
app.Life
iterateGenerations
2056
2079
48
print
Apply
false
0
false
print(Ansi.clearScreen)

10
src/main/scala/app/Life.scala
app
Life
Object
app.Life
iterateGenerations
2084
2213
49
foreach
Apply
false
0
false
Generations(initialWorld).foreach { world =>\n      print(Ansi.home)\n      println(world.prettified)\n      Thread.sleep(200)\n    }

11
src/main/scala/app/Life.scala
app
Life
Object
app.Life
$anonfun
2135
2151
50
print
Apply
false
0
false
print(Ansi.home)

12
src/main/scala/app/Life.scala
app
Life
Object
app.Life
$anonfun
2158
2183
51
println
Apply
false
0
false
println(world.prettified)

13
src/main/scala/app/Life.scala
app
Life
Object
app.Life
$anonfun
2166
2182
51
prettified
Apply
false
0
false
world.prettified

14
src/main/scala/app/Life.scala
app
Life
Object
app.Life
$anonfun
2190
2207
52
sleep
Apply
false
0
false
Thread.sleep(200)

15
src/main/scala/app/Life.scala
app
Life
Object
app.Life
iterateGenerations
1912
1942
46
iterateGenerations
DefDef
false
0
false
private def iterateGenerations

16
src/main/scala/app/Life.scala
app
Life
Object
app.Life
runRandom
2263
2285
56
random
Apply
false
0
false
Patterns.random(board)

17
src/main/scala/app/Life.scala
app
Life
Object
app.Life
runRandom
2290
2315
57
iterateGenerations
Apply
false
0
false
iterateGenerations(cells)

18
src/main/scala/app/Life.scala
app
Life
Object
app.Life
runRandom
2217
2238
55
runRandom
DefDef
false
0
false
private def runRandom

19
src/main/scala/app/Life.scala
app
Life
Object
app.Life
runWithFile
2373
2401
60
fromFilename
Apply
false
0
false
Cells.fromFilename(filename)

20
src/main/scala/app/Life.scala
app
Life
Object
app.Life
runWithFile
2435
2460
61
iterateGenerations
Apply
false
0
false
iterateGenerations(cells)

21
src/main/scala/app/Life.scala
app
Life
Object
app.Life
runWithFile
2432
2460
61
<none>
Block
true
0
false
=> iterateGenerations(cells)

22
src/main/scala/app/Life.scala
app
Life
Object
app.Life
runWithFile
2488
2502
62
println
Apply
false
0
false
println(error)

23
src/main/scala/app/Life.scala
app
Life
Object
app.Life
runWithFile
2485
2502
62
<none>
Block
true
0
false
=> println(error)

24
src/main/scala/app/Life.scala
app
Life
Object
app.Life
runWithFile
2319
2342
59
runWithFile
DefDef
false
0
false
private def runWithFile

25
src/main/scala/app/Life.scala
app
Life
Object
app.Life
main
2551
2555
65
refArrayOps
Apply
false
0
false
args

26
src/main/scala/app/Life.scala
app
Life
Object
app.Life
main
2551
2563
65
isEmpty
Select
false
0
false
args.isEmpty

27
src/main/scala/app/Life.scala
app
Life
Object
app.Life
main
2573
2582
66
runRandom
Ident
false
0
false
runRandom

28
src/main/scala/app/Life.scala
app
Life
Object
app.Life
main
2573
2582
66
runRandom
Ident
true
0
false
runRandom

29
src/main/scala/app/Life.scala
app
Life
Object
app.Life
main
2592
2617
67
foreach
Apply
false
0
false
args.foreach(runWithFile)

30
src/main/scala/app/Life.scala
app
Life
Object
app.Life
main
2592
2596
67
refArrayOps
Apply
false
0
false
args

31
src/main/scala/app/Life.scala
app
Life
Object
app.Life
$anonfun
2605
2616
67
runWithFile
Apply
false
0
false
runWithFile

32
src/main/scala/app/Life.scala
app
Life
Object
app.Life
main
2592
2617
67
foreach
Apply
true
0
false
args.foreach(runWithFile)

33
src/main/scala/app/Life.scala
app
Life
Object
app.Life
main
2506
2514
64
main
DefDef
false
0
false
def main

34
src/main/scala/app/Life.scala
app
Ansi
Object
app.Ansi
<init>
2695
2705
71
s
Apply
false
0
false
s"$esc[2J"

35
src/main/scala/app/Life.scala
app
Ansi
Object
app.Ansi
<init>
2734
2743
72
s
Apply
false
0
false
s"$esc[H"

36
src/main/scala/life/Bounds.scala
life
Bounds
Object
life.Bounds
intFor
2379
2395
62
getInt
Apply
false
0
false
config.getInt(s)

37
src/main/scala/life/Bounds.scala
life
Bounds
Object
life.Bounds
intFor
2355
2365
62
intFor
DefDef
false
0
false
def intFor

38
src/main/scala/life/Bounds.scala
life
Bounds
Object
life.Bounds
from
2414
2450
64
to
Apply
false
0
false
intFor("minRow") to intFor("maxRow")

39
src/main/scala/life/Bounds.scala
life
Bounds
Object
life.Bounds
from
2414
2430
64
intWrapper
Apply
false
0
false
intFor("minRow")

40
src/main/scala/life/Bounds.scala
life
Bounds
Object
life.Bounds
from
2414
2430
64
intFor
Apply
false
0
false
intFor("minRow")

41
src/main/scala/life/Bounds.scala
life
Bounds
Object
life.Bounds
from
2434
2450
64
intFor
Apply
false
0
false
intFor("maxRow")

42
src/main/scala/life/Bounds.scala
life
Bounds
Object
life.Bounds
from
2458
2500
65
to
Apply
false
0
false
intFor("minColumn") to intFor("maxColumn")

43
src/main/scala/life/Bounds.scala
life
Bounds
Object
life.Bounds
from
2458
2477
65
intWrapper
Apply
false
0
false
intFor("minColumn")

44
src/main/scala/life/Bounds.scala
life
Bounds
Object
life.Bounds
from
2458
2477
65
intFor
Apply
false
0
false
intFor("minColumn")

45
src/main/scala/life/Bounds.scala
life
Bounds
Object
life.Bounds
from
2481
2500
65
intFor
Apply
false
0
false
intFor("maxColumn")

46
src/main/scala/life/Bounds.scala
life
Bounds
Object
life.Bounds
from
2324
2332
61
from
DefDef
false
0
false
def from

47
src/main/scala/life/Cell.scala
life
Cell$package
Object
life.Cell$package
+
1853
1858
44
+
DefDef
false
0
false
def +

48
src/main/scala/life/Cell.scala
life
Cell$package
Object
life.Cell$package
neighbours
2057
2213
50
flatMap
Apply
false
0
false
for\n      deltaRow    <- -1 to 1\n      deltaColumn <- -1 to 1\n      if !(deltaRow == 0 && deltaColumn == 0)\n    yield cell + Position(deltaRow, deltaColumn)

49
src/main/scala/life/Cell.scala
life
Cell$package
Object
life.Cell$package
neighbours
2082
2089
51
to
Apply
false
0
false
-1 to 1

50
src/main/scala/life/Cell.scala
life
Cell$package
Object
life.Cell$package
neighbours
2082
2084
51
intWrapper
Apply
false
0
false
-1

51
src/main/scala/life/Cell.scala
life
Cell$package
Object
life.Cell$package
$anonfun
2096
2213
52
map
Apply
false
0
false
deltaColumn <- -1 to 1\n      if !(deltaRow == 0 && deltaColumn == 0)\n    yield cell + Position(deltaRow, deltaColumn)

52
src/main/scala/life/Cell.scala
life
Cell$package
Object
life.Cell$package
$anonfun
2096
2164
52
withFilter
Apply
false
0
false
deltaColumn <- -1 to 1\n      if !(deltaRow == 0 && deltaColumn == 0)

53
src/main/scala/life/Cell.scala
life
Cell$package
Object
life.Cell$package
$anonfun
2111
2118
52
to
Apply
false
0
false
-1 to 1

54
src/main/scala/life/Cell.scala
life
Cell$package
Object
life.Cell$package
$anonfun
2111
2113
52
intWrapper
Apply
false
0
false
-1

55
src/main/scala/life/Cell.scala
life
Cell$package
Object
life.Cell$package
$anonfun
2175
2213
54
+
Apply
false
0
false
cell + Position(deltaRow, deltaColumn)

56
src/main/scala/life/Cell.scala
life
Cell$package
Object
life.Cell$package
neighbours
2056
2221
54
toList
Select
false
0
false
(for\n      deltaRow    <- -1 to 1\n      deltaColumn <- -1 to 1\n      if !(deltaRow == 0 && deltaColumn == 0)\n    yield cell + Position(deltaRow, deltaColumn)).toList

57
src/main/scala/life/Cell.scala
life
Cell$package
Object
life.Cell$package
neighbours
2023
2037
49
neighbours
DefDef
false
0
false
def neighbours

58
src/main/scala/life/Cells.scala
life
Cells
Object
life.Cells
fromTextEx
1856
2014
46
wrapRefArray
Apply
false
0
false
s\n      .replace(" ", "")     // Remove spaces\n      .split("\\n")          // Split lines\n      .filterNot(_.isBlank) // Remove blank lines\n      .map(_.trim)

59
src/main/scala/life/Cells.scala
life
Cells
Object
life.Cells
fromTextEx
1856
2014
46
map
Apply
false
0
false
s\n      .replace(" ", "")     // Remove spaces\n      .split("\\n")          // Split lines\n      .filterNot(_.isBlank) // Remove blank lines\n      .map(_.trim)

60
src/main/scala/life/Cells.scala
life
Cells
Object
life.Cells
fromTextEx
1856
1973
46
refArrayOps
Apply
false
0
false
s\n      .replace(" ", "")     // Remove spaces\n      .split("\\n")          // Split lines\n      .filterNot(_.isBlank)

61
src/main/scala/life/Cells.scala
life
Cells
Object
life.Cells
fromTextEx
1856
1973
49
filterNot
Apply
false
0
false
s\n      .replace(" ", "")     // Remove spaces\n      .split("\\n")          // Split lines\n      .filterNot(_.isBlank)

62
src/main/scala/life/Cells.scala
life
Cells
Object
life.Cells
fromTextEx
1856
1921
46
refArrayOps
Apply
false
0
false
s\n      .replace(" ", "")     // Remove spaces\n      .split("\\n")

63
src/main/scala/life/Cells.scala
life
Cells
Object
life.Cells
fromTextEx
1856
1921
48
split
Apply
false
0
false
s\n      .replace(" ", "")     // Remove spaces\n      .split("\\n")

64
src/main/scala/life/Cells.scala
life
Cells
Object
life.Cells
fromTextEx
1856
1881
47
replace
Apply
false
0
false
s\n      .replace(" ", "")

65
src/main/scala/life/Cells.scala
life
Cells
Object
life.Cells
$anonfun
1963
1972
49
isBlank
Apply
false
0
false
_.isBlank

66
src/main/scala/life/Cells.scala
life
Cells
Object
life.Cells
$anonfun
2007
2013
50
trim
Apply
false
0
false
_.trim

67
src/main/scala/life/Cells.scala
life
Cells
Object
life.Cells
fromTextEx
1856
2060
51
toList
Select
false
0
false
s\n      .replace(" ", "")     // Remove spaces\n      .split("\\n")          // Split lines\n      .filterNot(_.isBlank) // Remove blank lines\n      .map(_.trim)          // Remove end of lines\n      .toList

68
src/main/scala/life/Cells.scala
life
Cells
Object
life.Cells
fromTextEx
2082
2100
52
map
Apply
false
0
false
rows.map(_.length)

69
src/main/scala/life/Cells.scala
life
Cells
Object
life.Cells
$anonfun
2091
2099
52
length
Apply
false
0
false
_.length

70
src/main/scala/life/Cells.scala
life
Cells
Object
life.Cells
fromTextEx
2105
2150
53
require
Apply
false
0
false
require(s.length > 0, "Invalid empty string")

71
src/main/scala/life/Cells.scala
life
Cells
Object
life.Cells
fromTextEx
2113
2121
53
length
Apply
false
0
false
s.length

72
src/main/scala/life/Cells.scala
life
Cells
Object
life.Cells
fromTextEx
2155
2237
54
require
Apply
false
0
false
require(Set.from(rowLengths).sizeIs == 1, s"Inconsistent row lengths $rowLengths")

73
src/main/scala/life/Cells.scala
life
Cells
Object
life.Cells
fromTextEx
2163
2195
54
==
Apply
false
0
false
Set.from(rowLengths).sizeIs == 1

74
src/main/scala/life/Cells.scala
life
Cells
Object
life.Cells
fromTextEx
2163
2183
54
from
Apply
false
0
false
Set.from(rowLengths)

75
src/main/scala/life/Cells.scala
life
Cells
Object
life.Cells
fromTextEx
2163
2190
54
sizeIs
Select
false
0
false
Set.from(rowLengths).sizeIs

76
src/main/scala/life/Cells.scala
life
Cells
Object
life.Cells
fromTextEx
2197
2236
54
s
Apply
false
0
false
s"Inconsistent row lengths $rowLengths"

77
src/main/scala/life/Cells.scala
life
Cells
Object
life.Cells
fromTextEx
2258
2380
55
flatMap
Apply
false
0
false
for\n      r <- 0 until rows.length\n      row = rows(r)\n      c <- 0 until row.length if row(c) != '.'\n    yield Cell(r, c)

78
src/main/scala/life/Cells.scala
life
Cells
Object
life.Cells
fromTextEx
2268
2312
56
map
Apply
false
0
false
r <- 0 until rows.length\n      row = rows(r)

79
src/main/scala/life/Cells.scala
life
Cells
Object
life.Cells
fromTextEx
2273
2292
56
until
Apply
false
0
false
0 until rows.length

80
src/main/scala/life/Cells.scala
life
Cells
Object
life.Cells
fromTextEx
2273
2274
56
intWrapper
Apply
false
0
false
0

81
src/main/scala/life/Cells.scala
life
Cells
Object
life.Cells
fromTextEx
2281
2292
56
length
Select
false
0
false
rows.length

82
src/main/scala/life/Cells.scala
life
Cells
Object
life.Cells
$anonfun
2305
2312
57
apply
Apply
false
0
false
rows(r)

83
src/main/scala/life/Cells.scala
life
Cells
Object
life.Cells
$anonfun
2319
2380
58
map
Apply
false
0
false
c <- 0 until row.length if row(c) != '.'\n    yield Cell(r, c)

84
src/main/scala/life/Cells.scala
life
Cells
Object
life.Cells
$anonfun
2319
2359
58
withFilter
Apply
false
0
false
c <- 0 until row.length if row(c) != '.'

85
src/main/scala/life/Cells.scala
life
Cells
Object
life.Cells
$anonfun
2324
2342
58
until
Apply
false
0
false
0 until row.length

86
src/main/scala/life/Cells.scala
life
Cells
Object
life.Cells
$anonfun
2324
2325
58
intWrapper
Apply
false
0
false
0

87
src/main/scala/life/Cells.scala
life
Cells
Object
life.Cells
$anonfun
2332
2342
58
length
Apply
false
0
false
row.length

88
src/main/scala/life/Cells.scala
life
Cells
Object
life.Cells
$anonfun
2346
2352
58
apply
Apply
false
0
false
row(c)

89
src/main/scala/life/Cells.scala
life
Cells
Object
life.Cells
$anonfun
2346
2349
58
augmentString
Apply
false
0
false
row

90
src/main/scala/life/Cells.scala
life
Cells
Object
life.Cells
$anonfun
2319
2380
58
map
Apply
true
0
false
c <- 0 until row.length if row(c) != '.'\n    yield Cell(r, c)

91
src/main/scala/life/Cells.scala
life
Cells
Object
life.Cells
fromTextEx
2385
2400
60
toSet
Select
false
0
false
liveCells.toSet

92
src/main/scala/life/Cells.scala
life
Cells
Object
life.Cells
fromTextEx
1798
1820
45
fromTextEx
DefDef
false
0
false
private def fromTextEx

93
src/main/scala/life/Cells.scala
life
Cells
Object
life.Cells
fromText
2783
2801
71
apply
Apply
false
0
false
Try(fromTextEx(s))

94
src/main/scala/life/Cells.scala
life
Cells
Object
life.Cells
fromText
2787
2800
71
fromTextEx
Apply
false
0
false
fromTextEx(s)

95
src/main/scala/life/Cells.scala
life
Cells
Object
life.Cells
fromText
2834
2863
72
<none>
Block
true
0
false
=> Right[Error, Cells](cells)

96
src/main/scala/life/Cells.scala
life
Cells
Object
life.Cells
fromText
2912
2928
73
getMessage
Apply
false
0
false
error.getMessage

97
src/main/scala/life/Cells.scala
life
Cells
Object
life.Cells
fromText
2890
2929
73
<none>
Block
true
0
false
=> Left[Error, Cells](error.getMessage)

98
src/main/scala/life/Cells.scala
life
Cells
Object
life.Cells
fromText
2745
2757
70
fromText
DefDef
false
0
false
def fromText

99
src/main/scala/life/Cells.scala
life
Cells
Object
life.Cells
fromFilenameEx
3004
3056
76
fromFile
Apply
false
0
false
Source.fromFile(filename)(Codec.defaultCharsetCodec)

100
src/main/scala/life/Cells.scala
life
Cells
Object
life.Cells
fromFilenameEx
3030
3055
76
defaultCharsetCodec
Select
false
0
false
Codec.defaultCharsetCodec

101
src/main/scala/life/Cells.scala
life
Cells
Object
life.Cells
fromFilenameEx
3061
3105
77
fromTextEx
Apply
false
0
false
fromTextEx(source.getLines().mkString("\\n"))

102
src/main/scala/life/Cells.scala
life
Cells
Object
life.Cells
fromFilenameEx
3072
3104
77
mkString
Apply
false
0
false
source.getLines().mkString("\\n")

103
src/main/scala/life/Cells.scala
life
Cells
Object
life.Cells
fromFilenameEx
3072
3089
77
getLines
Apply
false
0
false
source.getLines()

104
src/main/scala/life/Cells.scala
life
Cells
Object
life.Cells
fromFilenameEx
2933
2959
75
fromFilenameEx
DefDef
false
0
false
private def fromFilenameEx

105
src/main/scala/life/Cells.scala
life
Cells
Object
life.Cells
fromFilename
3542
3571
88
apply
Apply
false
0
false
Try(fromFilenameEx(filename))

106
src/main/scala/life/Cells.scala
life
Cells
Object
life.Cells
fromFilename
3546
3570
88
fromFilenameEx
Apply
false
0
false
fromFilenameEx(filename)

107
src/main/scala/life/Cells.scala
life
Cells
Object
life.Cells
fromFilename
3604
3633
89
<none>
Block
true
0
false
=> Right[Error, Cells](cells)

108
src/main/scala/life/Cells.scala
life
Cells
Object
life.Cells
fromFilename
3682
3698
90
getMessage
Apply
false
0
false
error.getMessage

109
src/main/scala/life/Cells.scala
life
Cells
Object
life.Cells
fromFilename
3660
3699
90
<none>
Block
true
0
false
=> Left[Error, Cells](error.getMessage)

110
src/main/scala/life/Cells.scala
life
Cells
Object
life.Cells
fromFilename
3493
3509
87
fromFilename
DefDef
false
0
false
def fromFilename

111
src/main/scala/life/Cells.scala
life
Cells$package
Object
life.Cells$package
bounds
3772
3784
94
toList
Select
false
0
false
cells.toList

112
src/main/scala/life/Cells.scala
life
Cells$package
Object
life.Cells$package
bounds
3769
3769
94
apply
Apply
true
0
false


113
src/main/scala/life/Cells.scala
life
Cells$package
Object
life.Cells$package
bounds
3827
3847
95
to
Apply
false
0
false
head.row to head.row

114
src/main/scala/life/Cells.scala
life
Cells$package
Object
life.Cells$package
bounds
3827
3835
95
intWrapper
Apply
false
0
false
head.row

115
src/main/scala/life/Cells.scala
life
Cells$package
Object
life.Cells$package
bounds
3849
3875
95
to
Apply
false
0
false
head.column to head.column

116
src/main/scala/life/Cells.scala
life
Cells$package
Object
life.Cells$package
bounds
3849
3860
95
intWrapper
Apply
false
0
false
head.column

117
src/main/scala/life/Cells.scala
life
Cells$package
Object
life.Cells$package
updateBounds
4017
4077
100
to
Apply
false
0
false
Math.min(rows.min, cell.row) to Math.max(rows.max, cell.row)

118
src/main/scala/life/Cells.scala
life
Cells$package
Object
life.Cells$package
updateBounds
4017
4045
100
intWrapper
Apply
false
0
false
Math.min(rows.min, cell.row)

119
src/main/scala/life/Cells.scala
life
Cells$package
Object
life.Cells$package
updateBounds
4017
4045
100
min
Apply
false
0
false
Math.min(rows.min, cell.row)

120
src/main/scala/life/Cells.scala
life
Cells$package
Object
life.Cells$package
updateBounds
4026
4034
100
min
Apply
false
0
false
rows.min

121
src/main/scala/life/Cells.scala
life
Cells$package
Object
life.Cells$package
updateBounds
4049
4077
100
max
Apply
false
0
false
Math.max(rows.max, cell.row)

122
src/main/scala/life/Cells.scala
life
Cells$package
Object
life.Cells$package
updateBounds
4058
4066
100
max
Apply
false
0
false
rows.max

123
src/main/scala/life/Cells.scala
life
Cells$package
Object
life.Cells$package
updateBounds
4109
4181
101
to
Apply
false
0
false
Math.min(columns.min, cell.column) to Math.max(columns.max, cell.column)

124
src/main/scala/life/Cells.scala
life
Cells$package
Object
life.Cells$package
updateBounds
4109
4143
101
intWrapper
Apply
false
0
false
Math.min(columns.min, cell.column)

125
src/main/scala/life/Cells.scala
life
Cells$package
Object
life.Cells$package
updateBounds
4109
4143
101
min
Apply
false
0
false
Math.min(columns.min, cell.column)

126
src/main/scala/life/Cells.scala
life
Cells$package
Object
life.Cells$package
updateBounds
4118
4129
101
min
Apply
false
0
false
columns.min

127
src/main/scala/life/Cells.scala
life
Cells$package
Object
life.Cells$package
updateBounds
4147
4181
101
max
Apply
false
0
false
Math.max(columns.max, cell.column)

128
src/main/scala/life/Cells.scala
life
Cells$package
Object
life.Cells$package
updateBounds
4156
4167
101
max
Apply
false
0
false
columns.max

129
src/main/scala/life/Cells.scala
life
Cells$package
Object
life.Cells$package
updateBounds
3996
4227
100
<none>
Block
true
0
false
val updatedRows    = Math.min(rows.min, cell.row) to Math.max(rows.max, cell.row)\n          val updatedColumns = Math.min(columns.min, cell.column) to Math.max(columns.max, cell.column)\n          Bounds(updatedRows, updatedColumns)

130
src/main/scala/life/Cells.scala
life
Cells$package
Object
life.Cells$package
updateBounds
3882
3898
97
updateBounds
DefDef
false
0
false
def updateBounds

131
src/main/scala/life/Cells.scala
life
Cells$package
Object
life.Cells$package
bounds
4233
4272
104
foldLeft
Apply
false
0
false
rest.foldLeft(headBounds)(updateBounds)

132
src/main/scala/life/Cells.scala
life
Cells$package
Object
life.Cells$package
$anonfun
4259
4271
104
updateBounds
Apply
false
0
false
updateBounds

133
src/main/scala/life/Cells.scala
life
Cells$package
Object
life.Cells$package
bounds
3728
3738
93
bounds
DefDef
false
0
false
def bounds

134
src/main/scala/life/Cells.scala
life
Cells$package
Object
life.Cells$package
rotate
4384
4391
109
modulus
Ident
true
0
false
modulus

135
src/main/scala/life/Cells.scala
life
Cells$package
Object
life.Cells$package
rotate
4397
4412
109
+
Apply
true
0
false
order + modulus

136
src/main/scala/life/Cells.scala
life
Cells$package
Object
life.Cells$package
rotate
4445
4457
111
bounds
Apply
false
0
false
cells.bounds

137
src/main/scala/life/Cells.scala
life
Cells$package
Object
life.Cells$package
rotate
4489
4517
112
from
Apply
false
0
false
IndexedSeq.from(bounds.rows)

138
src/main/scala/life/Cells.scala
life
Cells$package
Object
life.Cells$package
rotate
4549
4583
113
from
Apply
false
0
false
IndexedSeq.from(boundsRow.reverse)

139
src/main/scala/life/Cells.scala
life
Cells$package
Object
life.Cells$package
rotate
4565
4582
113
reverse
Select
false
0
false
boundsRow.reverse

140
src/main/scala/life/Cells.scala
life
Cells$package
Object
life.Cells$package
rotate
4615
4646
114
from
Apply
false
0
false
IndexedSeq.from(bounds.columns)

141
src/main/scala/life/Cells.scala
life
Cells$package
Object
life.Cells$package
rotate
4678
4715
115
from
Apply
false
0
false
IndexedSeq.from(boundsColumn.reverse)

142
src/main/scala/life/Cells.scala
life
Cells$package
Object
life.Cells$package
rotate
4694
4714
115
reverse
Select
false
0
false
boundsColumn.reverse

143
src/main/scala/life/Cells.scala
life
Cells$package
Object
life.Cells$package
rotate0
4721
4732
117
rotate0
DefDef
false
0
false
def rotate0

144
src/main/scala/life/Cells.scala
life
Cells$package
Object
life.Cells$package
rotate90
4817
4844
118
apply
Apply
false
0
false
boundsRowReversed(cell.row)

145
src/main/scala/life/Cells.scala
life
Cells$package
Object
life.Cells$package
rotate90
4771
4783
118
rotate90
DefDef
false
0
false
def rotate90

146
src/main/scala/life/Cells.scala
life
Cells$package
Object
life.Cells$package
rotate180
4883
4910
119
apply
Apply
false
0
false
boundsRowReversed(cell.row)

147
src/main/scala/life/Cells.scala
life
Cells$package
Object
life.Cells$package
rotate180
4912
4945
119
apply
Apply
false
0
false
boundsColumnReversed(cell.column)

148
src/main/scala/life/Cells.scala
life
Cells$package
Object
life.Cells$package
rotate180
4850
4863
119
rotate180
DefDef
false
0
false
def rotate180

149
src/main/scala/life/Cells.scala
life
Cells$package
Object
life.Cells$package
rotate270
4984
5017
120
apply
Apply
false
0
false
boundsColumnReversed(cell.column)

150
src/main/scala/life/Cells.scala
life
Cells$package
Object
life.Cells$package
rotate270
4951
4964
120
rotate270
DefDef
false
0
false
def rotate270

151
src/main/scala/life/Cells.scala
life
Cells$package
Object
life.Cells$package
rotate
5047
5105
122
apply
Apply
false
0
false
IndexedSeq(rotate0, rotate90, rotate180, rotate270)(cycle)

152
src/main/scala/life/Cells.scala
life
Cells$package
Object
life.Cells$package
rotate
5047
5098
122
apply
Apply
false
0
false
IndexedSeq(rotate0, rotate90, rotate180, rotate270)

153
src/main/scala/life/Cells.scala
life
Cells$package
Object
life.Cells$package
$anonfun
5058
5065
122
rotate0
Apply
false
0
false
rotate0

154
src/main/scala/life/Cells.scala
life
Cells$package
Object
life.Cells$package
$anonfun
5067
5075
122
rotate90
Apply
false
0
false
rotate90

155
src/main/scala/life/Cells.scala
life
Cells$package
Object
life.Cells$package
$anonfun
5077
5086
122
rotate180
Apply
false
0
false
rotate180

156
src/main/scala/life/Cells.scala
life
Cells$package
Object
life.Cells$package
$anonfun
5088
5097
122
rotate270
Apply
false
0
false
rotate270

157
src/main/scala/life/Cells.scala
life
Cells$package
Object
life.Cells$package
rotate
5110
5127
123
map
Apply
false
0
false
cells.map(rotate)

158
src/main/scala/life/Cells.scala
life
Cells$package
Object
life.Cells$package
rotate
4276
4286
106
rotate
DefDef
false
0
false
def rotate

159
src/main/scala/life/Generations.scala
life
Generations
Class
life.Generations
<init>
2067
2077
44
empty
Select
false
0
false
List.empty

160
src/main/scala/life/Generations.scala
life
Generations
Class
life.Generations
nextWithHistory
2171
2196
47
nextGeneration
Apply
false
0
false
current._1.nextGeneration

161
src/main/scala/life/Generations.scala
life
Generations
Class
life.Generations
nextWithHistory
2208
2226
48
+:
Apply
false
0
false
next +: current._2

162
src/main/scala/life/Generations.scala
life
Generations
Class
life.Generations
nextWithHistory
2089
2116
46
nextWithHistory
DefDef
false
0
false
private def nextWithHistory

163
src/main/scala/life/Generations.scala
life
Generations
Class
life.Generations
<init>
2256
2298
50
iterate
Apply
false
0
false
Iterator.iterate(initial)(nextWithHistory)

164
src/main/scala/life/Generations.scala
life
Generations
Class
life.Generations
$anonfun
2282
2297
50
nextWithHistory
Apply
false
0
false
nextWithHistory

165
src/main/scala/life/Generations.scala
life
Generations
Class
life.Generations
<init>
2256
2307
50
buffered
Select
false
0
false
Iterator.iterate(initial)(nextWithHistory).buffered

166
src/main/scala/life/Generations.scala
life
Generations
Class
life.Generations
hasNext
2524
2539
57
head
Select
false
0
false
iterations.head

167
src/main/scala/life/Generations.scala
life
Generations
Class
life.Generations
hasNext
2544
2571
58
count
Apply
false
0
false
peek._2.count(_ == peek._1)

168
src/main/scala/life/Generations.scala
life
Generations
Class
life.Generations
hasNext
2477
2497
56
hasNext
DefDef
false
0
false
override def hasNext

169
src/main/scala/life/Generations.scala
life
Generations
Class
life.Generations
next
2829
2844
64
next
Apply
false
0
false
iterations.next

170
src/main/scala/life/Generations.scala
life
Generations
Class
life.Generations
next
2802
2819
64
next
DefDef
false
0
false
override def next

171
src/main/scala/life/Patterns.scala
life
Patterns
Object
life.Patterns
fromPattern
1824
1894
41
fromResource
Apply
false
0
false
Source.fromResource(s"patterns/$name.life")(Codec.defaultCharsetCodec)

172
src/main/scala/life/Patterns.scala
life
Patterns
Object
life.Patterns
fromPattern
1844
1866
41
s
Apply
false
0
false
s"patterns/$name.life"

173
src/main/scala/life/Patterns.scala
life
Patterns
Object
life.Patterns
fromPattern
1868
1893
41
defaultCharsetCodec
Select
false
0
false
Codec.defaultCharsetCodec

174
src/main/scala/life/Patterns.scala
life
Patterns
Object
life.Patterns
fromPattern
1899
1959
42
fold
Apply
false
0
false
Cells.fromText(source.mkString).toOption.fold(???)(identity)

175
src/main/scala/life/Patterns.scala
life
Patterns
Object
life.Patterns
fromPattern
1899
1930
42
fromText
Apply
false
0
false
Cells.fromText(source.mkString)

176
src/main/scala/life/Patterns.scala
life
Patterns
Object
life.Patterns
fromPattern
1914
1929
42
mkString
Select
false
0
false
source.mkString

177
src/main/scala/life/Patterns.scala
life
Patterns
Object
life.Patterns
fromPattern
1899
1939
42
toOption
Select
false
0
false
Cells.fromText(source.mkString).toOption

178
src/main/scala/life/Patterns.scala
life
Patterns
Object
life.Patterns
fromPattern
1945
1948
42
???
Ident
false
0
false
???

179
src/main/scala/life/Patterns.scala
life
Patterns
Object
life.Patterns
$anonfun
1950
1958
42
identity
Apply
false
0
false
identity

180
src/main/scala/life/Patterns.scala
life
Patterns
Object
life.Patterns
fromPattern
1760
1783
40
fromPattern
DefDef
false
0
false
private def fromPattern

181
src/main/scala/life/Patterns.scala
life
Patterns
Object
life.Patterns
beacon
2104
2125
47
fromPattern
Apply
false
0
false
fromPattern("beacon")

182
src/main/scala/life/Patterns.scala
life
Patterns
Object
life.Patterns
beacon
2091
2101
47
beacon
DefDef
false
0
false
def beacon

183
src/main/scala/life/Patterns.scala
life
Patterns
Object
life.Patterns
beehive
2318
2340
53
fromPattern
Apply
false
0
false
fromPattern("beehive")

184
src/main/scala/life/Patterns.scala
life
Patterns
Object
life.Patterns
beehive
2304
2315
53
beehive
DefDef
false
0
false
def beehive

185
src/main/scala/life/Patterns.scala
life
Patterns
Object
life.Patterns
blinker
2488
2510
58
fromPattern
Apply
false
0
false
fromPattern("blinker")

186
src/main/scala/life/Patterns.scala
life
Patterns
Object
life.Patterns
blinker
2474
2485
58
blinker
DefDef
false
0
false
def blinker

187
src/main/scala/life/Patterns.scala
life
Patterns
Object
life.Patterns
block
2719
2739
64
fromPattern
Apply
false
0
false
fromPattern("block")

188
src/main/scala/life/Patterns.scala
life
Patterns
Object
life.Patterns
block
2707
2716
64
block
DefDef
false
0
false
def block

189
src/main/scala/life/Patterns.scala
life
Patterns
Object
life.Patterns
boat
2920
2939
70
fromPattern
Apply
false
0
false
fromPattern("boat")

190
src/main/scala/life/Patterns.scala
life
Patterns
Object
life.Patterns
boat
2909
2917
70
boat
DefDef
false
0
false
def boat

191
src/main/scala/life/Patterns.scala
life
Patterns
Object
life.Patterns
glider
3093
3114
75
fromPattern
Apply
false
0
false
fromPattern("glider")

192
src/main/scala/life/Patterns.scala
life
Patterns
Object
life.Patterns
glider
3080
3090
75
glider
DefDef
false
0
false
def glider

193
src/main/scala/life/Patterns.scala
life
Patterns
Object
life.Patterns
gliderGunGosper
3335
3365
81
fromPattern
Apply
false
0
false
fromPattern("gliderGunGosper")

194
src/main/scala/life/Patterns.scala
life
Patterns
Object
life.Patterns
gliderGunGosper
3313
3332
81
gliderGunGosper
DefDef
false
0
false
def gliderGunGosper

195
src/main/scala/life/Patterns.scala
life
Patterns
Object
life.Patterns
loaf
3531
3550
86
fromPattern
Apply
false
0
false
fromPattern("loaf")

196
src/main/scala/life/Patterns.scala
life
Patterns
Object
life.Patterns
loaf
3520
3528
86
loaf
DefDef
false
0
false
def loaf

197
src/main/scala/life/Patterns.scala
life
Patterns
Object
life.Patterns
pentaDecathlon
3700
3729
91
fromPattern
Apply
false
0
false
fromPattern("pentaDecathlon")

198
src/main/scala/life/Patterns.scala
life
Patterns
Object
life.Patterns
pentaDecathlon
3679
3697
91
pentaDecathlon
DefDef
false
0
false
def pentaDecathlon

199
src/main/scala/life/Patterns.scala
life
Patterns
Object
life.Patterns
pulsar
3876
3897
96
fromPattern
Apply
false
0
false
fromPattern("pulsar")

200
src/main/scala/life/Patterns.scala
life
Patterns
Object
life.Patterns
pulsar
3863
3873
96
pulsar
DefDef
false
0
false
def pulsar

201
src/main/scala/life/Patterns.scala
life
Patterns
Object
life.Patterns
spaceshipLightweight
4078
4113
101
fromPattern
Apply
false
0
false
fromPattern("spaceshipLightweight")

202
src/main/scala/life/Patterns.scala
life
Patterns
Object
life.Patterns
spaceshipLightweight
4051
4075
101
spaceshipLightweight
DefDef
false
0
false
def spaceshipLightweight

203
src/main/scala/life/Patterns.scala
life
Patterns
Object
life.Patterns
toad
4252
4271
106
fromPattern
Apply
false
0
false
fromPattern("toad")

204
src/main/scala/life/Patterns.scala
life
Patterns
Object
life.Patterns
toad
4241
4249
106
toad
DefDef
false
0
false
def toad

205
src/main/scala/life/Patterns.scala
life
Patterns
Object
life.Patterns
tub
4454
4472
112
fromPattern
Apply
false
0
false
fromPattern("tub")

206
src/main/scala/life/Patterns.scala
life
Patterns
Object
life.Patterns
tub
4444
4451
112
tub
DefDef
false
0
false
def tub

207
src/main/scala/life/Patterns.scala
life
Patterns
Object
life.Patterns
random
4740
4862
121
flatMap
Apply
false
0
false
for\n      row    <- board.rows\n      column <- board.columns\n      if Random.nextDouble <= 0.2\n    yield Cell(row, column)

208
src/main/scala/life/Patterns.scala
life
Patterns
Object
life.Patterns
$anonfun
4777
4862
123
map
Apply
false
0
false
column <- board.columns\n      if Random.nextDouble <= 0.2\n    yield Cell(row, column)

209
src/main/scala/life/Patterns.scala
life
Patterns
Object
life.Patterns
$anonfun
4777
4834
123
withFilter
Apply
false
0
false
column <- board.columns\n      if Random.nextDouble <= 0.2

210
src/main/scala/life/Patterns.scala
life
Patterns
Object
life.Patterns
$anonfun
4810
4827
124
nextDouble
Apply
false
0
false
Random.nextDouble

211
src/main/scala/life/Patterns.scala
life
Patterns
Object
life.Patterns
random
4739
4869
125
toSet
Select
false
0
false
(for\n      row    <- board.rows\n      column <- board.columns\n      if Random.nextDouble <= 0.2\n    yield Cell(row, column)).toSet

212
src/main/scala/life/Patterns.scala
life
Patterns
Object
life.Patterns
random
4700
4710
120
random
DefDef
false
0
false
def random

213
src/main/scala/life/World.scala
life
World
Object
life.World
withCells
2660
2673
53
withCells
DefDef
false
0
false
def withCells

214
src/main/scala/life/World.scala
life
World$package
Object
life.World$package
withinRange
2835
2848
57
contains
Apply
false
0
false
r.contains(i)

215
src/main/scala/life/World.scala
life
World$package
Object
life.World$package
withinRange
2796
2811
57
withinRange
DefDef
false
0
false
def withinRange

216
src/main/scala/life/World.scala
life
World$package
Object
life.World$package
withinBounds
2892
2918
58
withinRange
Apply
false
0
false
withinRange(b.rows, c.row)

217
src/main/scala/life/World.scala
life
World$package
Object
life.World$package
withinBounds
2922
2954
58
withinRange
Apply
false
0
false
withinRange(b.columns, c.column)

218
src/main/scala/life/World.scala
life
World$package
Object
life.World$package
withinBounds
2853
2869
58
withinBounds
DefDef
false
0
false
def withinBounds

219
src/main/scala/life/World.scala
life
World$package
Object
life.World$package
cellsInBounds
2998
3033
59
filter
Apply
false
0
false
w.liveCells.filter(withinBounds(b))

220
src/main/scala/life/World.scala
life
World$package
Object
life.World$package
$anonfun
3017
3032
59
withinBounds
Apply
false
0
false
withinBounds(b)

221
src/main/scala/life/World.scala
life
World$package
Object
life.World$package
cellsInBounds
2959
2976
59
cellsInBounds
DefDef
false
0
false
def cellsInBounds

222
src/main/scala/life/World.scala
life
World$package
Object
life.World$package
removingOffworlders
3038
3121
60
getOrElse
Apply
false
0
false
w.maybeBounds.map(bounds => w.copy(liveCells = cellsInBounds(bounds))).getOrElse(w)

223
src/main/scala/life/World.scala
life
World$package
Object
life.World$package
removingOffworlders
3038
3108
60
map
Apply
false
0
false
w.maybeBounds.map(bounds => w.copy(liveCells = cellsInBounds(bounds)))

224
src/main/scala/life/World.scala
life
World$package
Object
life.World$package
$anonfun
3085
3106
60
cellsInBounds
Apply
false
0
false
cellsInBounds(bounds)

225
src/main/scala/life/World.scala
life
World$package
Object
life.World$package
removingOffworlders
2751
2782
56
removingOffworlders
DefDef
false
0
false
private def removingOffworlders

226
src/main/scala/life/World.scala
life
World$package
Object
life.World$package
withBounds
3441
3495
69
removingOffworlders
Apply
false
0
false
w.copy(maybeBounds = Some(bounds)).removingOffworlders

227
src/main/scala/life/World.scala
life
World$package
Object
life.World$package
withBounds
3401
3415
69
withBounds
DefDef
false
0
false
def withBounds

228
src/main/scala/life/World.scala
life
World$package
Object
life.World$package
unbounded
3559
3572
74
unbounded
DefDef
false
0
false
def unbounded

229
src/main/scala/life/World.scala
life
World$package
Object
life.World$package
withViewport
3779
3795
82
withViewport
DefDef
false
0
false
def withViewport

230
src/main/scala/life/World.scala
life
World$package
Object
life.World$package
withoutViewport
4038
4057
88
withoutViewport
DefDef
false
0
false
def withoutViewport

231
src/main/scala/life/World.scala
life
World$package
Object
life.World$package
withCells
4459
4480
99
map
Apply
false
0
false
cells.map(_ + offset)

232
src/main/scala/life/World.scala
life
World$package
Object
life.World$package
$anonfun
4469
4479
99
+
Apply
false
0
false
_ + offset

233
src/main/scala/life/World.scala
life
World$package
Object
life.World$package
withCells
4485
4551
100
removingOffworlders
Apply
false
0
false
w.copy(liveCells = w.liveCells ++ offsetCells).removingOffworlders

234
src/main/scala/life/World.scala
life
World$package
Object
life.World$package
withCells
4504
4530
100
++
Apply
false
0
false
w.liveCells ++ offsetCells

235
src/main/scala/life/World.scala
life
World$package
Object
life.World$package
withCells
4382
4395
98
withCells
DefDef
false
0
false
def withCells

236
src/main/scala/life/World.scala
life
World$package
Object
life.World$package
isLive
4597
4623
102
contains
Apply
false
0
false
w.liveCells.contains(cell)

237
src/main/scala/life/World.scala
life
World$package
Object
life.World$package
isLive
4555
4573
102
isLive
DefDef
false
0
false
private def isLive

238
src/main/scala/life/World.scala
life
World$package
Object
life.World$package
neighbourCount
4673
4702
104
count
Apply
false
0
false
cell.neighbours.count(isLive)

239
src/main/scala/life/World.scala
life
World$package
Object
life.World$package
neighbourCount
4673
4688
104
neighbours
Apply
false
0
false
cell.neighbours

240
src/main/scala/life/World.scala
life
World$package
Object
life.World$package
$anonfun
4695
4701
104
isLive
Apply
false
0
false
isLive

241
src/main/scala/life/World.scala
life
World$package
Object
life.World$package
neighbourCount
4627
4653
104
neighbourCount
DefDef
false
0
false
private def neighbourCount

242
src/main/scala/life/World.scala
life
World$package
Object
life.World$package
nextGeneration
4850
4887
110
flatten
Apply
false
0
false
w.liveCells.map(_.neighbours).flatten

243
src/main/scala/life/World.scala
life
World$package
Object
life.World$package
nextGeneration
4850
4879
110
map
Apply
false
0
false
w.liveCells.map(_.neighbours)

244
src/main/scala/life/World.scala
life
World$package
Object
life.World$package
$anonfun
4866
4878
110
neighbours
Apply
false
0
false
_.neighbours

245
src/main/scala/life/World.scala
life
World$package
Object
life.World$package
nextGeneration
4914
4942
111
++
Apply
false
0
false
w.liveCells ++ allNeighbours

246
src/main/scala/life/World.scala
life
World$package
Object
life.World$package
nextGeneration
4969
5012
112
map
Apply
false
0
false
allCells.map(c => (c, w.neighbourCount(c)))

247
src/main/scala/life/World.scala
life
World$package
Object
life.World$package
$anonfun
4991
5010
112
neighbourCount
Apply
false
0
false
w.neighbourCount(c)

248
src/main/scala/life/World.scala
life
World$package
Object
life.World$package
nextGeneration
5039
5109
113
map
Apply
false
0
false
neighbourCounts.filter((_, count) => count < 2 || count > 3).map(_._1)

249
src/main/scala/life/World.scala
life
World$package
Object
life.World$package
nextGeneration
5039
5099
113
filter
Apply
false
0
false
neighbourCounts.filter((_, count) => count < 2 || count > 3)

250
src/main/scala/life/World.scala
life
World$package
Object
life.World$package
nextGeneration
5136
5194
114
map
Apply
false
0
false
neighbourCounts.filter((_, count) => count == 3).map(_._1)

251
src/main/scala/life/World.scala
life
World$package
Object
life.World$package
nextGeneration
5136
5184
114
filter
Apply
false
0
false
neighbourCounts.filter((_, count) => count == 3)

252
src/main/scala/life/World.scala
life
World$package
Object
life.World$package
nextGeneration
5199
5277
115
removingOffworlders
Apply
false
0
false
w.copy(liveCells = w.liveCells -- dyingCells ++ bornCells).removingOffworlders

253
src/main/scala/life/World.scala
life
World$package
Object
life.World$package
nextGeneration
5218
5256
115
++
Apply
false
0
false
w.liveCells -- dyingCells ++ bornCells

254
src/main/scala/life/World.scala
life
World$package
Object
life.World$package
nextGeneration
5218
5243
115
--
Apply
false
0
false
w.liveCells -- dyingCells

255
src/main/scala/life/World.scala
life
World$package
Object
life.World$package
nextGeneration
4796
4814
109
nextGeneration
DefDef
false
0
false
def nextGeneration

256
src/main/scala/life/World.scala
life
World$package
Object
life.World$package
prettified
5402
5472
121
getOrElse
Apply
false
0
false
w.maybeViewport.getOrElse(w.maybeBounds.getOrElse(w.liveCells.bounds))

257
src/main/scala/life/World.scala
life
World$package
Object
life.World$package
prettified
5428
5471
121
getOrElse
Apply
false
0
false
w.maybeBounds.getOrElse(w.liveCells.bounds)

258
src/main/scala/life/World.scala
life
World$package
Object
life.World$package
prettified
5452
5470
121
bounds
Apply
false
0
false
w.liveCells.bounds

259
src/main/scala/life/World.scala
life
World$package
Object
life.World$package
rowString
5516
5631
123
map
Apply
false
0
false
for\n        c <- bounds.columns\n        cellChar = if w.isLive(Cell(r, c)) then "* " else "  "\n      yield cellChar

260
src/main/scala/life/World.scala
life
World$package
Object
life.World$package
rowString
5528
5610
124
map
Apply
false
0
false
c <- bounds.columns\n        cellChar = if w.isLive(Cell(r, c)) then "* " else "  "

261
src/main/scala/life/World.scala
life
World$package
Object
life.World$package
$anonfun
5570
5590
125
isLive
Apply
false
0
false
w.isLive(Cell(r, c))

262
src/main/scala/life/World.scala
life
World$package
Object
life.World$package
$anonfun
5596
5600
125
<none>
Literal
true
0
false
"* "

263
src/main/scala/life/World.scala
life
World$package
Object
life.World$package
$anonfun
5606
5610
125
<none>
Literal
true
0
false
"  "

264
src/main/scala/life/World.scala
life
World$package
Object
life.World$package
$anonfun
5623
5631
126
cellChar
Typed
true
0
false
cellChar

265
src/main/scala/life/World.scala
life
World$package
Object
life.World$package
rowString
5515
5641
126
mkString
Select
false
0
false
(for\n        c <- bounds.columns\n        cellChar = if w.isLive(Cell(r, c)) then "* " else "  "\n      yield cellChar).mkString

266
src/main/scala/life/World.scala
life
World$package
Object
life.World$package
rowString
5477
5490
122
rowString
DefDef
false
0
false
def rowString

267
src/main/scala/life/World.scala
life
World$package
Object
life.World$package
prettified
5646
5706
128
mkString
Apply
false
0
false
(for r <- bounds.rows\n    yield rowString(r)).mkString("\\n")

268
src/main/scala/life/World.scala
life
World$package
Object
life.World$package
prettified
5647
5690
127
map
Apply
false
0
false
for r <- bounds.rows\n    yield rowString(r)

269
src/main/scala/life/World.scala
life
World$package
Object
life.World$package
$anonfun
5678
5690
128
rowString
Apply
false
0
false
rowString(r)

270
src/main/scala/life/World.scala
life
World$package
Object
life.World$package
prettified
5360
5374
120
prettified
DefDef
false
0
false
def prettified

